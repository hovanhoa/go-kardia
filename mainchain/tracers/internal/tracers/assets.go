// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.289kB)
// 4byte_tracer_legacy.js (3.02kB)
// bigram_tracer.js (1.759kB)
// call_tracer.js (4.373kB)
// call_tracer_legacy.js (9.209kB)
// evmdis_tracer.js (4.289kB)
// noop_tracer.js (1.301kB)
// opcount_tracer.js (1.405kB)
// prestate_tracer.js (4.396kB)
// trigram_tracer.js (1.838kB)
// unigram_tracer.js (1.511kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x5b\x4f\x23\x39\x13\x7d\x06\x89\xff\x70\xc4\x13\xd1\x74\x2e\x9d\x04\x72\x99\x8f\x91\xf2\x8d\x60\x26\x12\xcb\xa0\x10\x34\x42\xab\x7d\x70\xda\xd5\xdd\x5e\x1c\xbb\x65\xbb\x73\x59\x86\xff\xbe\xb2\xbb\x13\x02\xb3\xab\x9d\xa7\xa8\xed\xaa\x53\x55\xe7\x1c\x57\xda\x6d\x7c\xd6\xc5\xd6\x88\x2c\x77\xe8\x76\xe2\x01\xe6\x39\x21\xd3\x4d\x72\x39\x19\x2a\x97\x98\x94\x2e\xd7\xc6\x9e\x1c\xb7\xdb\x98\xe7\xc2\x22\x15\x92\x20\x2c\x0a\x66\x1c\x74\x0a\xf7\x2e\x41\x8a\x85\x61\x66\xdb\xf2\x19\x75\xd6\x3f\x06\x78\x8c\xd4\x10\xc1\xea\xd4\xad\x99\xa1\x31\xb6\xba\x44\xc2\x14\x0c\x71\x61\x9d\x11\x8b\xd2\x11\x84\x03\x53\xbc\xad\x0d\x96\x9a\x8b\x74\x1b\x30\x85\x43\xa9\x38\x99\x50\xdd\x91\x59\xda\x5d\x2b\x5f\x6e\x1f\x70\x43\xd6\x92\xc1\x17\x52\x64\x98\xc4\x5d\xb9\x90\x22\xc1\x8d\x48\x48\x59\x02\xb3\x28\xfc\x89\xcd\x89\x63\x51\xe1\xf9\xcc\x6b\xdf\xcc\x7d\xdd\x0c\xae\x75\xa9\x38\x73\x42\xab\x08\x24\x7c\xef\x58\x91\xb1\x42\x2b\xf4\x76\xb5\x6a\xc4\x08\xda\x04\x94\x33\xe6\xfc\x0c\x06\xba\xf0\x89\x0d\x30\xb5\x85\x64\xee\x35\xf7\x97\x58\x79\x1d\x9e\x43\xa8\x50\x29\xd7\x05\xc1\xe5\xcc\xf9\xc9\xd7\x42\x4a\x2c\x08\xa5\xa5\xb4\x94\x51\x80\x5b\x94\x0e\xdf\xa7\xf3\xaf\xdf\x1e\xe6\x98\xdc\x3e\xe2\xfb\x64\x36\x9b\xdc\xce\x1f\x3f\x62\x2d\x5c\xae\x4b\x07\x5a\x51\x85\x25\x96\x85\x14\xc4\xb1\x66\xc6\x30\xe5\xb6\xd0\x69\x80\xf8\xed\x6a\xf6\xf9\xeb\xe4\x76\x3e\xf9\xff\xf4\x66\x3a\x7f\x84\x36\xb8\x9e\xce\x6f\xaf\xee\xef\x71\xfd\x6d\x86\x09\xee\x26\xb3\xf9\xf4\xf3\xc3\xcd\x64\x86\xbb\x87\xd9\xdd\xb7\xfb\xab\x16\xee\xc9\xf7\x45\x01\xe0\xbf\xa9\x4f\x83\x8a\x86\xc0\xc9\x31\x21\xed\x2b\x1d\x8f\xba\x84\xcd\x75\x29\x39\x72\xb6\x22\x18\x4a\x48\xac\x88\x83\x21\xd1\xc5\xf6\x97\xd5\x0d\x60\x4c\x6a\x95\x85\xc1\xff\xd5\x9d\x98\xa6\x50\xda\x45\xb0\x44\xf8\x5f\xee\x5c\x31\x6e\xb7\xd7\xeb\x75\x2b\x53\x65\x4b\x9b\xac\x2d\x2b\x3c\xdb\xfe\xd4\x3a\x39\x0e\xa8\xfd\xc5\xd6\xd1\xdc\xb0\x84\x0c\x2c\x31\x93\xe4\x64\xc3\x44\xe1\xa2\x29\x38\x29\x27\x52\x41\xc6\x46\xde\xb1\x48\xb4\x94\x94\x38\xeb\x7b\x58\x86\xc0\x42\x5b\xd7\x2c\x8c\x4e\xc8\x5a\xa1\xb2\x30\x3d\xa6\xee\x4d\x24\x96\xe4\x72\xcd\x2d\x0e\xf0\xde\x0f\x64\xc5\x5f\xb4\x63\xc4\x96\x45\x25\x27\x67\x8e\x45\xb0\xba\x62\x00\x86\xbc\xe5\x88\xc3\x8a\x4c\x31\x57\x1a\x0a\x4f\x6b\x41\x58\x32\x97\x78\xeb\xb3\x8c\x09\x65\xdd\x4f\x88\x1e\xe8\x55\x98\xab\x0d\x5b\x16\x92\xc6\xe1\x03\xf8\x04\x4e\x8b\x32\x6b\x39\xcf\xc3\xdc\x30\x65\x59\xe2\xbd\x7e\x86\xd3\xce\xa6\x1b\xf7\xe9\x7c\x34\xa0\xde\x39\x67\x9d\x61\xef\x62\xd4\x4d\xcf\x7b\xc3\x8b\xb8\x1f\xd3\xc5\x28\xed\x0f\x68\x34\xe8\x2d\xba\xc9\xf9\x05\x0d\xd8\xb0\x33\xe8\x2d\x62\x62\x9d\x61\xca\x07\xe7\x83\x98\x46\x9c\x4e\x23\x3c\x07\x60\x33\xc6\xe9\x01\xdd\xa7\x2f\x8d\xba\xfc\x73\xfd\x0b\x74\x36\xdd\x01\x4f\xba\xa3\x01\x35\xe3\xee\x70\x8c\x38\x3a\xb8\xea\x0d\x93\xa4\x3f\xec\xc5\xcd\xce\x18\xdd\xc3\x8b\xf3\x6e\x3f\xed\x0d\x87\xa3\xe6\xe8\xe2\x5d\x0a\xe3\xe9\xf9\x28\x1d\x8d\x9a\xdd\xe1\x7b\xb4\xa4\x3b\x8c\x79\x3c\x22\x8f\x16\xd7\xe7\x2f\x27\xc7\xcf\x27\xc7\x47\x7e\x15\x71\x0b\x96\x65\x86\x32\xe6\xa8\x92\x30\xb4\x1e\x2e\x52\xbf\x45\x5a\x27\xc7\x47\xfe\x63\x8c\xe7\x97\xc8\x9b\xc9\xa7\x59\xe7\xdf\x81\xf5\x5e\x0f\x1e\x15\xfe\x79\x0a\xb5\x17\x3d\x58\xc8\x4b\xe1\xa5\xf1\x08\x21\x61\x8c\xb4\x54\x15\xe1\x82\x47\x41\xb6\x86\xef\xe3\x68\xc5\x0c\x9e\x68\x8b\x4b\x9c\x9e\xe2\x03\x9c\xfe\x4a\x9b\x33\xc1\x1b\xf8\x80\xd3\xa6\x3f\xf1\xa1\x1f\x7d\xa4\xcb\x85\x6d\x09\x6e\x7f\x7f\xa2\xed\x1f\xb8\xc4\xdb\xef\x0f\x88\xf1\xe3\x07\x62\x1f\x5a\x37\x4b\xca\x79\x41\xf6\x85\x53\xc3\x96\xd4\x40\x28\xdb\x6e\xe3\xfe\x49\x14\x61\xd1\x15\x86\x9a\x89\x5e\x16\xe1\xff\x41\xad\x74\x12\xb6\xa7\x8d\xe0\x72\xed\xd7\xae\x21\xfc\x59\x5a\x87\x94\xa9\x64\x0b\x5d\x24\x9a\x93\xf5\x20\x22\xc5\x99\xb0\x77\x86\xea\x6c\x5e\x95\x68\x65\xe4\xe6\xfa\xac\xd1\xa8\x6b\x1d\x19\x72\xa5\x51\x61\x88\x97\xdd\xcc\x42\x15\xa5\xc3\x25\xf6\x19\x53\x7f\x70\xd6\xd8\xe3\xfa\xcf\x96\x24\x95\xb9\x1c\x9f\x2e\xd1\xdf\x81\x85\xb1\x03\xa7\x67\xd6\xbf\xf5\x2a\x32\x42\x27\x42\xbf\x11\xe1\x4d\x5e\x13\xfd\xc6\xbe\xec\x8e\x95\x8d\x70\xef\x49\x99\x91\x2d\xa5\x6b\x1c\xca\x9c\xb2\x52\x3a\xbf\xd4\x3d\x23\x4f\x7e\xeb\xe6\xf5\x1a\x66\x89\x2b\x99\x04\x6d\x28\x29\x3d\x84\x7f\x7e\x4c\xd5\xbc\x20\xad\xd7\xe3\x51\x00\x38\x28\x24\x75\x16\x81\x2f\xde\x14\x31\xa1\xee\x4f\x55\x98\x94\xa1\x52\x4d\x75\xb5\x58\x17\xe4\x7d\xe6\xc8\x30\xff\xf7\xa2\x57\xb5\xd3\x2a\x6e\x6d\x85\xe7\x93\x52\xa1\x98\xdc\x21\xd7\x9b\xc1\xbf\xcd\x6a\x6f\x1d\x55\x17\x07\x7d\x25\x6e\x73\xe0\x89\x9d\xad\x75\xe9\xff\xfc\x12\x26\xa5\xb7\x32\x98\xf4\xfb\xa9\x52\x26\x71\x9b\xd6\xaf\xab\xb3\x8f\xde\x2b\xf4\x3e\xbf\xd9\x6f\xec\x9d\x51\x4d\xb3\xb7\xf6\xce\xcc\x2f\x27\xc7\x7f\x07\x00\x00\xff\xff\x01\x65\xaa\xa9\xf1\x08\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0x72, 0x75, 0xb3, 0x1f, 0x96, 0x28, 0x20, 0xaf, 0xa0, 0x40, 0x93, 0xf6, 0x1a, 0xbf, 0xcd, 0x2c, 0x93, 0x98, 0xe5, 0x8f, 0x1, 0x4a, 0x21, 0x63, 0x51, 0x85, 0x42, 0x8c, 0x26, 0x13, 0x56}}
	return a, nil
}

var __4byte_tracer_legacyJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdd\x73\xdb\xb8\x11\x7f\x96\x67\xfc\x3f\x6c\xf5\x12\xe9\x42\x51\xd6\x87\xad\x8f\x34\x99\x51\x7d\x4e\xe2\xa9\xcf\xf6\x58\x4a\x6f\x32\x9d\x3e\x40\xc0\x92\x44\x4d\x01\x1c\x60\x29\x59\xc9\xf9\x7f\xef\x2c\x48\xc6\xb2\xeb\x6b\xef\x5e\x2c\x13\xd8\xfd\xed\x6f\xbf\xd1\xff\xe9\xf8\x08\x7e\x02\x38\xb7\xc5\xde\xe9\x34\x23\x18\x9e\x0c\x07\xf0\x77\xe1\x94\x16\xe7\x99\xd0\xa6\xba\x5f\x65\xda\x43\xa2\x73\x04\xed\xa1\x10\x8e\xc0\x26\x40\x19\x42\x6a\x7b\xf7\x41\x18\x72\xbd\x76\xc2\xed\x63\x56\x68\x94\x5e\xb9\x67\x80\xc4\x21\x82\xb7\x09\xed\x84\xc3\x39\xec\x6d\x09\x52\x18\x70\xa8\xb4\x27\xa7\xd7\x25\x21\x68\x02\x61\x54\xdf\x3a\xd8\x58\xa5\x93\x7d\x05\xa9\x09\x4a\xa3\xd0\x05\xdb\x84\x6e\xe3\x1b\x22\x9f\xae\xbf\xc0\x15\x7a\x8f\x0e\x3e\xa1\x41\x27\x72\xb8\x2d\xd7\xb9\x96\x70\xa5\x25\x1a\x8f\x20\x3c\x14\x7c\xe2\x33\x54\xb0\xae\x01\x59\xf5\x23\xd3\x59\xd6\x74\xe0\xa3\x2d\x8d\x12\xa4\xad\x89\x00\x35\x65\xe8\x60\x8b\xce\x6b\x6b\x60\xd4\x18\xab\x21\x23\xb0\xae\x82\xe9\x08\x62\x37\x1c\xd8\x82\x35\xbb\x20\xcc\x1e\x72\x41\x4f\xca\x7f\x24\x2e\x4f\xee\x2b\xd0\x26\x58\xca\x6c\x81\x40\x99\x20\x76\x7d\xa7\xf3\x1c\xd6\x08\xa5\xc7\xa4\xcc\xa3\x0a\x6d\x5d\x12\xfc\x7a\xb9\xfa\x7c\xf3\x65\x05\x8b\xeb\xaf\xf0\xeb\xe2\xee\x6e\x71\xbd\xfa\xfa\x0e\x76\x9a\x32\x5b\x12\xe0\x16\x2b\x30\xbd\x29\x72\x8d\x0a\x76\xc2\x39\x61\x68\x0f\x36\xa9\x30\x7e\xb9\xb8\x3b\xff\xbc\xb8\x5e\x2d\xfe\x76\x79\x75\xb9\xfa\x0a\xd6\xc1\xc7\xcb\xd5\xf5\xc5\x72\x09\x1f\x6f\xee\x60\x01\xb7\x8b\xbb\xd5\xe5\xf9\x97\xab\xc5\x1d\xdc\x7e\xb9\xbb\xbd\x59\x5e\xc4\xb0\x44\x66\x86\x15\xc2\xff\x0f\x7f\x12\x52\xe9\x10\x14\x92\xd0\xb9\x3f\x08\xc8\x57\x5b\x82\xcf\x6c\x99\x2b\xc8\xc4\x16\xc1\xa1\x44\xbd\x45\x05\x02\xa4\x2d\xf6\x7f\x38\xc5\x15\x9a\xc8\xad\x49\x83\xf3\xbf\x53\xa1\x70\x99\x80\xb1\x14\x81\x47\x84\xbf\x66\x44\xc5\xbc\xdf\xdf\xed\x76\x71\x6a\xca\xd8\xba\xb4\x9f\x57\x70\xbe\xff\x21\x90\xec\x1f\x1f\x1d\x1f\xf5\xfb\x30\x5e\xef\x09\x57\x4e\x48\x74\xe0\x51\x38\x99\xa1\x0f\x6e\x85\x8b\x9e\x56\x68\x48\x27\x1a\x9d\x8f\xb8\x76\x41\xda\x3c\x47\x49\x9e\x69\x6c\x82\x60\x61\x3d\xf5\x0a\x67\x25\x7a\xaf\x4d\x1a\x07\xd8\x4b\x7a\x26\x09\x1b\xa4\xcc\x2a\x0f\x07\x78\x2f\x7d\xf2\xfa\x1b\x36\x51\xf1\x65\x51\x65\x55\x09\x12\x11\x78\x1b\x40\x05\x38\xe4\xca\x43\x05\x5e\xa7\x46\x50\xe9\x30\x34\xd9\x1a\x61\x23\x48\x72\x0f\x88\x54\x68\xe3\xe9\xbf\x10\x19\x28\x50\x0b\x48\x17\x0f\x62\x53\xe4\x38\x0f\x1f\x00\x1f\x40\xe1\xba\x4c\x63\xe2\x38\xac\x9c\x30\x5e\x48\x2e\xf9\x0e\xb4\x4f\x1e\x86\x83\x31\x9e\xce\x26\x38\x3a\x55\xe2\x64\x3a\x3a\x9b\x0d\x93\xd3\xd1\xf4\x6c\x30\x1e\xe0\xd9\x2c\x19\x4f\x70\x36\x19\xad\x87\xf2\xf4\x0c\x27\x62\x7a\x32\x19\xad\x07\x28\x4e\xa6\x89\x9a\x9c\x4e\x06\x38\x53\xd8\x8e\xe0\x7b\x00\x76\x73\x68\x1f\x84\xbb\xfd\xd8\xad\xcd\x7f\xaf\x7f\x01\x4e\x1e\x86\x13\x25\x87\xb3\x09\xf6\x06\xc3\xe9\x1c\x06\xd1\xc1\xd5\x68\x2a\xe5\x78\x3a\x1a\xf4\x4e\xe6\x30\x3c\xbc\x38\x1d\x8e\x93\xd1\x74\x3a\xeb\xcd\xce\x5e\xa8\x08\x95\x9c\xce\x92\xd9\xac\x37\x9c\xbe\x44\x93\xc3\xe9\x40\x0d\x66\xc8\x68\x83\xfa\xfc\xf1\xf8\xe8\xfb\xf1\x51\xab\xdf\x07\xad\x3c\x88\x34\x75\x98\x0a\xc2\x2a\x85\x81\x7a\xb8\x48\x78\x9a\xc4\xc7\x47\x2d\xfe\x98\xc3\xf7\xc7\x88\x8b\x89\xd5\xa4\xc8\xf3\xd5\xbe\xe0\x6a\xa7\xd2\x19\x0f\x6f\x12\x91\x7b\x7c\x13\x0a\xc5\x58\xd3\x63\x01\xcf\x23\x26\x40\x16\x88\xf7\x3d\x6d\x14\x3e\x04\x01\x3e\x4a\xb4\xf3\xc4\xd3\x58\x6c\x2a\x48\x91\xf0\xc0\x79\xb3\x15\x79\x89\x6f\x22\xd0\x31\xc6\xb0\xc1\x0d\x27\x59\x38\x62\x16\x8d\xd1\x39\x24\xa5\xa9\xf2\x66\x0b\x4f\xae\xcb\xbe\xb4\xfc\x4e\x93\xcc\x0e\x4f\xa4\xf0\x08\xed\xf3\xc5\xd5\x55\x7b\x0e\x4f\x1f\xe7\x37\x3f\x5f\xb4\xe7\x2c\xc0\x66\x53\xc1\x05\xaf\x94\x8b\x60\x2b\xf2\xa8\x32\x59\xff\xf8\x6f\xe1\x1f\x5b\x52\xf3\xeb\xbf\x05\xbd\xca\x6b\x18\xbd\x83\x7e\x1f\x3c\x09\x79\x0f\x05\x39\x20\x5b\xe9\x85\x28\xd5\xe6\x7f\xbe\xb8\xba\xf8\xb4\x58\x5d\x3c\xa3\xb1\x5c\x2d\x56\x97\xe7\xd5\xd1\x2b\x44\xfe\x0c\x87\xe1\xef\x72\x68\xb5\x1e\xf9\x4f\x2d\x17\xf2\xf3\xee\xf8\xa8\xf5\x94\x44\x4f\x3c\xd1\x3c\x0f\xad\x30\x6b\x34\x8f\x5a\xce\x52\xdd\xb9\x61\x0e\x70\x3f\x71\x7f\x71\x02\x82\xc2\x41\xf4\xb5\x8a\x42\xef\x55\xe1\xde\x0a\x07\xf7\xb8\x87\xf7\xd0\x6e\xc3\x5b\x20\xfb\x19\x1f\x3a\x5a\x75\xe1\x2d\xb4\x7b\x7c\xc2\xa2\xcc\xa0\x45\x99\xf6\xb1\x56\xfe\x9f\xf7\xb8\xff\x17\xbc\x87\xe7\xdf\x6f\x61\x00\xbf\xfd\x06\x83\x97\x64\xb1\xe0\x35\xa3\xcd\xd6\xde\xa3\x0a\x75\xc4\x43\x62\x0f\xb6\x90\x56\xd5\x7b\x86\xfd\xf8\xc7\x2f\x80\x0f\x28\x4b\x42\x5f\x91\xc6\xe2\x80\x73\x6e\xd3\x08\xd4\xba\x0b\x81\x73\xbf\x0f\xcb\x7b\x5d\x84\x8d\x57\xe1\xf8\x0a\x88\x97\xa9\xb1\x04\xda\x10\x3a\x23\xf2\x50\xf1\xbe\x71\x53\x52\xc3\xba\xa9\x49\xc6\x8d\x6d\x11\x93\x5d\x92\xd3\x26\xed\x74\xbb\xc1\x55\x9d\x40\xe7\x2f\x92\x6a\x73\x75\x32\xde\xfd\x48\xce\xa1\xfd\xc2\x61\x4f\xda\x4d\x11\x1e\x2a\x66\x6b\x65\xd8\xe3\x3e\x02\xca\x2c\xbf\x00\x1c\xc2\xbf\x4b\x4f\x90\x08\x23\x7f\xb0\x6d\x6c\x68\x7f\xeb\xb0\xd6\x56\x1d\xb2\x0b\xa5\x1c\x7a\x1f\x68\x85\xe2\x88\xb9\x07\x3b\x83\xee\x13\xc3\xc1\x59\xb7\xdb\xfd\x1f\xc4\x3e\x89\xf0\x7e\x78\x16\x81\x66\xff\x35\x81\xd0\x66\xf9\x0d\xde\xc3\x0b\x2b\x92\x38\x89\xdd\x38\xf4\xf2\x4d\xd2\x79\x0a\x45\x90\xff\xf0\x1e\xc6\x8d\xdd\x0a\xe4\x26\x49\x5e\x43\x79\x89\x50\x15\x4e\xa8\xc2\xe0\x18\xf7\x83\xdb\xc7\x9e\x57\x5e\x27\xa0\x44\x35\xd8\x5b\x18\x77\xa3\xc0\xae\x37\xee\xfe\xf0\xea\xa9\x9a\x12\x51\xe6\x74\x58\x4e\xbb\xac\x7e\x66\x08\x49\xa5\xc8\xeb\x0a\xe2\x77\x93\x4d\x40\x98\xa6\xc8\x92\x7a\xf9\xb7\x02\xc0\xab\x65\x05\x4f\x56\x1c\xfa\xd7\xcc\x70\x1c\xd9\x54\x53\x70\xe1\xd9\xb0\x46\x6e\x3e\x42\x27\xf8\x01\x65\xb7\x75\xfb\xd5\xf3\xb5\xc2\xab\xe6\x26\xe7\xa2\x46\xae\x77\x1e\x6f\x9d\x6a\x23\xb7\xaa\x8b\x03\x62\x92\x1e\x0e\x6a\xbd\xe9\x75\x5b\xf2\xb0\xe5\x8c\x72\x7f\x83\xc8\x79\xf3\x56\x29\x92\xf4\x10\x6b\x53\x94\x14\xe7\x68\x52\xca\x9e\xa5\xeb\x20\x01\x55\xd4\x7f\x48\x47\x70\x12\x85\xa0\xbf\xd4\xef\x8d\xbb\x2f\x67\x51\xd3\xef\x4d\x87\x3f\x1e\x1f\xfd\x27\x00\x00\xff\xff\x92\x8f\x20\x39\xcc\x0b\x00\x00")

func _4byte_tracer_legacyJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracer_legacyJs,
		"4byte_tracer_legacy.js",
	)
}

func _4byte_tracer_legacyJs() (*asset, error) {
	bytes, err := _4byte_tracer_legacyJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer_legacy.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x18, 0x64, 0x5a, 0x4d, 0xfa, 0x55, 0xea, 0x83, 0xe7, 0x85, 0x3d, 0x41, 0x8b, 0x42, 0x50, 0x32, 0xea, 0x71, 0x52, 0x2c, 0x8e, 0x1f, 0xc6, 0xbe, 0x52, 0xdf, 0xd, 0x62, 0x47, 0xd5, 0xc8, 0xbb}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5f\x6f\xdb\x36\x14\xc5\xdf\x0d\xf8\x3b\x9c\xb7\x24\x88\x6b\xb5\xdb\xcb\xe0\xcc\x03\xbc\x2c\x69\x0d\xa4\x76\x60\x3b\x2b\x82\x61\x0f\x94\x74\x25\x11\xa1\x49\x81\xbc\xb4\x2b\x14\xf9\xee\x05\x29\x39\x96\x83\x14\xad\x9e\x64\xf3\x9c\xdf\xfd\x4b\x25\x09\xae\x4d\xdd\x58\x59\x56\x8c\xdf\xde\x7f\xf8\x03\x9b\x8a\x50\x9a\x77\xc4\x15\x59\xf2\x5b\xcc\x3c\x57\xc6\xba\xe1\x20\x49\xb0\xa9\xa4\x43\x21\x15\x41\x3a\xd4\xc2\x32\x4c\x01\x7e\x65\x50\x32\xb5\xc2\x36\xe3\xe0\xe8\x5c\x6f\x0a\x02\xa3\xb0\x44\x70\xa6\xe0\xbd\xb0\x34\x41\x63\x3c\x32\xa1\x61\x29\x97\x8e\xad\x4c\x3d\x13\x24\x43\xe8\x3c\x31\x16\x5b\x93\xcb\xa2\x89\x4c\xc9\xf0\x3a\x27\x1b\xa3\x33\xd9\xad\x3b\xa4\xf2\x71\xf1\x80\x3b\x72\x8e\x2c\x3e\x92\x26\x2b\x14\xee\x7d\xaa\x64\x86\x3b\x99\x91\x76\x04\xe1\x50\x87\x7f\x5c\x45\x39\xd2\x96\x17\x9c\xb7\x21\x99\x75\x97\x0c\x6e\x8d\xd7\xb9\x60\x69\xf4\x08\x24\x43\xee\xd8\x91\x75\xd2\x68\xfc\x7e\x88\xd5\x11\x47\x30\x36\x52\xce\x05\x87\x1a\x2c\x4c\x1d\x8c\x17\x10\xba\x81\x12\x7c\xf4\xfe\x52\x57\x8e\xc5\xe7\x90\x3a\x46\xaa\x4c\x4d\xe0\x4a\x70\xa8\x7c\x2f\x95\x42\x4a\xf0\x8e\x0a\xaf\x46\x11\x97\x7a\xc6\x97\xf9\xe6\xd3\xf2\x61\x83\xd9\xe2\x11\x5f\x66\xab\xd5\x6c\xb1\x79\xbc\xc2\x5e\x72\x65\x3c\x83\x76\xd4\xb2\xe4\xb6\x56\x92\x72\xec\x85\xb5\x42\x73\x03\x53\x44\xc4\xe7\x9b\xd5\xf5\xa7\xd9\x62\x33\xfb\x7b\x7e\x37\xdf\x3c\xc2\x58\xdc\xce\x37\x8b\x9b\xf5\x1a\xb7\xcb\x15\x66\xb8\x9f\xad\x36\xf3\xeb\x87\xbb\xd9\x0a\xf7\x0f\xab\xfb\xe5\xfa\x66\x8c\x35\x85\xbc\x28\x02\x7e\xde\xfa\x22\x4e\xd1\x12\x72\x62\x21\x95\x3b\xb6\xe3\xd1\x78\xb8\xca\x78\x95\xa3\x12\x3b\x82\xa5\x8c\xe4\x8e\x72\x08\x64\xa6\x6e\x7e\x79\xba\x11\x26\x94\xd1\x65\x2c\xfc\x87\xdb\x89\x79\x01\x6d\x78\x04\x47\x84\x3f\x2b\xe6\x7a\x92\x24\xfb\xfd\x7e\x5c\x6a\x3f\x36\xb6\x4c\x54\xcb\x73\xc9\x5f\xe3\xe1\x60\x38\xf8\x36\x1c\x00\x40\x92\xa0\x92\x8e\xc3\x94\x02\x39\x33\x5e\x33\xd9\xb8\x7c\xa6\xce\x4c\x4e\x48\x65\x69\xc5\xd6\xb5\xf2\xa0\x9d\xe0\xdb\xf3\xe8\xc5\xad\x84\xe3\x65\x1d\xfc\xe1\x0d\xa6\x26\x1b\x97\xac\x15\xb4\xa7\x13\x9c\x9d\x1d\x1d\xf4\x95\x32\x1f\x24\xc8\xa9\xe6\x2a\x84\xea\xac\x47\xcf\x3f\xe1\x64\x82\xf7\x47\x97\x63\x8a\x51\xa4\xde\x99\x27\xca\x63\xe7\x69\x47\xb6\x39\xe4\x19\x97\x29\xd4\xf0\xef\xe7\x2e\x04\x85\x71\x04\x7b\xf0\x4e\x50\x78\x9d\x85\xb0\xe7\xca\x94\x23\xe4\xe9\x05\xba\x1e\x84\x67\x27\xc2\x92\x63\x0a\x65\xca\xb1\xa9\xc7\x6c\xd6\x6c\xa5\x2e\xcf\x2f\xae\x4e\x45\x6d\xce\xad\xae\xa4\x36\xd1\x13\x91\x2c\x70\xde\x89\xa6\xe0\x4a\xba\xf1\x4b\x41\x17\xbd\x80\x07\xde\x13\x35\xe8\xe9\x96\xf5\xe5\xd9\xbb\xb3\x4b\x53\x5f\x9d\x4a\x03\x35\x8a\xc2\x04\xfe\x7b\xa2\xe6\xff\xd7\xb0\xf0\x9c\x2a\x2e\x2f\x5f\x41\x9e\x4f\x7f\x92\x72\x84\x9f\x52\x30\xc5\x87\x1f\x73\x7a\xaf\xbd\x1a\x30\xc5\x49\x05\xa7\x6d\xc0\xb4\xed\x62\x27\xe8\x2d\x53\x21\xbc\xe2\xfe\x94\xf7\x55\x77\xc7\x45\xc6\x5e\xa8\xde\xee\x98\x02\x42\x1f\x66\x5f\x74\x77\x2f\x60\x22\xe3\xcd\x69\xf7\x02\x59\x72\x6f\x45\x12\x4a\xc5\x68\x2d\xd6\xb5\x37\x37\x25\xd2\x90\x1c\xf6\x9a\x72\x98\x1d\xd9\xf0\xfd\x86\x25\xf6\x56\xbb\x17\x64\xf0\x15\x52\x0b\x75\x80\x77\x37\x9c\xad\xc8\xa4\x2e\xbb\xec\xda\xb3\x5e\x7a\x19\x7f\x3d\x59\xc4\x16\x7b\x9c\x41\xaf\x49\xcf\xc3\xc1\xf7\x00\x00\x00\xff\xff\xee\x0a\x82\x66\xdf\x06\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x68, 0x65, 0x4b, 0x9b, 0x79, 0x34, 0x80, 0x29, 0x1d, 0xe9, 0xdf, 0xa3, 0xe6, 0x62, 0xab, 0x80, 0xb7, 0xf7, 0xe3, 0x8a, 0x8f, 0x54, 0xc4, 0x23, 0xf9, 0x23, 0x39, 0x7c, 0xd0, 0x2d, 0xe6, 0x91}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4f\x6f\xdb\xb8\x12\x3f\x3b\x40\xbe\xc3\xbc\x1c\x6a\xbb\x75\xed\xa4\x0f\xe8\xc1\xad\x0b\xf8\x05\x49\x6b\xbc\x6c\x12\x38\xce\x16\x41\x90\x03\x6d\x8d\x24\x36\x34\x29\x90\x54\x6c\x6d\xeb\xef\xbe\x18\x52\x92\x25\xd9\x49\xdb\xd3\x02\x9b\x02\x85\x39\x7f\x7e\x33\x9c\x7f\x1c\x0d\x5e\x1f\x1e\xc0\x6b\x80\x53\x95\x64\x9a\x47\xb1\x85\x77\xc7\xef\x4e\xe0\xff\x4c\x07\x9c\x9d\xc6\x8c\x4b\xcf\x9f\xc5\xdc\x40\xc8\x05\x02\x37\x90\x30\x6d\x41\x85\x60\x63\x84\x48\xbd\x7d\x74\xc2\x20\xf8\x5c\x33\x9d\xf5\x49\xa1\x50\xda\xc3\x27\x80\x50\x23\x82\x51\xa1\x5d\x31\x8d\x43\xc8\x54\x0a\x0b\x26\x41\x63\xc0\x8d\xd5\x7c\x9e\x5a\x04\x6e\x81\xc9\x60\xa0\x34\x2c\x55\xc0\xc3\xcc\x43\x72\x0b\xa9\x0c\x50\x3b\xdb\x16\xf5\xd2\x14\x8e\x7c\xbe\xbc\x85\x0b\x34\x06\x35\x7c\x46\x89\x9a\x09\xb8\x4e\xe7\x82\x2f\xe0\x82\x2f\x50\x1a\x04\x66\x20\x21\x8a\x89\x31\x80\x79\x0e\x48\xaa\xe7\xe4\xce\x4d\xee\x0e\x9c\xab\x54\x06\xcc\x72\x25\x7b\x80\xdc\xc6\xa8\xe1\x09\xb5\xe1\x4a\xc2\x7f\x0b\x63\x39\x64\x0f\x94\xf6\x30\x1d\x66\xe9\x1a\x1a\x54\x42\x9a\x5d\x60\x32\x03\xc1\xec\x56\xf9\x57\xe2\xb2\xbd\x7e\x00\x5c\x3a\x4b\xb1\x4a\x10\x6c\xcc\x2c\x5d\x7d\xc5\x85\x80\x39\x42\x6a\x30\x4c\x45\xcf\xa3\xcd\x53\x0b\x5f\x27\xb3\x2f\x57\xb7\x33\x18\x5f\xde\xc1\xd7\xf1\x74\x3a\xbe\x9c\xdd\x7d\x80\x15\xb7\xb1\x4a\x2d\xe0\x13\x7a\x30\xbe\x4c\x04\xc7\x00\x56\x4c\x6b\x26\x6d\x06\x2a\xf4\x18\x7f\x9c\x4d\x4f\xbf\x8c\x2f\x67\xe3\xff\x4d\x2e\x26\xb3\x3b\x50\x1a\xce\x27\xb3\xcb\xb3\x9b\x1b\x38\xbf\x9a\xc2\x18\xae\xc7\xd3\xd9\xe4\xf4\xf6\x62\x3c\x85\xeb\xdb\xe9\xf5\xd5\xcd\x59\x1f\x6e\x90\x3c\x43\x8f\xf0\xf3\xf0\x87\x2e\x95\x1a\x21\x40\xcb\xb8\x30\x95\x80\xdc\xa9\x14\x4c\xac\x52\x11\x40\xcc\x9e\x10\x34\x2e\x90\x3f\x61\x00\x0c\x16\x2a\xc9\x7e\x39\xc5\x1e\x8d\x09\x25\x23\x77\xf9\x67\x2a\x14\x26\x21\x48\x65\x7b\x60\x10\xe1\x63\x6c\x6d\x32\x1c\x0c\x56\xab\x55\x3f\x92\x69\x5f\xe9\x68\x20\x3c\x9c\x19\x7c\x72\x4e\x0e\x0e\x0f\xe8\xdf\x60\x00\x0b\x26\xc4\xb9\x66\x4b\x9c\x69\xb6\x40\x4d\x89\x30\xce\x88\xc4\x95\x63\x42\x48\x5c\xb0\x9a\x2d\xb8\x8c\x60\x89\x36\x56\x81\x01\xab\x40\x63\xa2\xb4\xcd\x53\x07\x5c\x86\x4a\x2f\x5d\x95\x39\x60\x36\xa7\x44\x71\x69\x51\x4b\x26\x60\x89\xc6\xb0\x08\x5d\x71\x33\x42\x93\x86\x2d\xac\xaf\xa2\xef\x87\x07\x00\xe0\xac\x19\xcb\x16\x8f\x43\xb8\xff\xbe\x79\xe8\x79\x6a\xc8\x52\x61\x87\x10\xa6\xd2\x89\x77\x84\x8a\x7a\x10\xcc\xbb\x90\x6b\xd1\xdf\x13\xd3\x20\x50\xc2\x08\x6c\xcc\x4d\xbf\x04\xea\x0b\x94\x91\x8d\xb7\x82\x3c\x84\x0e\x09\x7e\x82\x93\x1a\x40\x01\xe2\x2e\xbc\x83\x92\xa8\xa4\xd3\xad\x0b\x13\x50\x5d\xea\x5e\xa0\x7c\x7b\xf2\xe0\x09\x30\x1a\x8d\x5c\x5b\x87\x5c\x62\xb0\x63\x8a\xfe\x5e\xd4\x86\xfb\x87\xba\xc6\xa6\x7e\x7c\x41\xb9\x9f\xa4\x26\xee\xd0\xcf\x8a\xcb\xb9\xfa\x26\x8f\xa9\x46\x53\x0f\xea\xc2\xae\x77\x82\x3a\x18\xc0\xb5\xc6\x84\x06\x88\x4a\xa9\xed\xf3\x14\xba\x4c\xd7\x63\xef\xf1\x60\xd4\xbc\xa7\xcd\x12\x1c\xba\xd4\xda\x75\x9f\x0e\xbd\x3a\x3f\xd4\x6a\xe9\xf8\x56\x7d\xc1\x35\x79\xd1\x27\x52\xb7\x21\x66\xd5\xb0\xf8\x51\x88\x59\xd5\x14\x7a\x62\x22\x75\xc6\xda\xc7\xeb\x36\xbc\x71\x26\x1d\xad\x6f\xd5\x8d\xd5\x5c\x46\x9d\x93\xf7\x4d\xa5\x88\x19\x0f\x9d\x2b\xcd\x79\x34\x91\xd6\x59\x88\x98\xe9\xfe\x44\xf5\xd6\x60\x30\xdc\xaf\x4a\xac\x17\xd5\xb9\x4c\x52\x3b\xac\xdd\xc9\x91\x9a\x72\x2a\xb5\x5e\x70\x2b\xe7\x49\x55\xc1\x4d\xbd\xc2\x1b\xd5\x71\x5c\x94\xd5\x7f\x5e\x28\x4a\x9f\xc2\xb2\xfe\x9e\x81\xf8\x0d\x93\xa8\xb5\xd2\xbf\x62\xd2\x0b\xee\x33\xe9\x38\x15\x93\x80\xc2\xa0\x33\x47\x61\xf8\x6d\x03\xa5\xd2\xb3\xb7\xa8\x29\xd4\x90\xe1\xd5\xab\x3d\xec\x23\x5c\xe3\x22\xa5\x0e\x02\x8d\x4f\xa8\x2d\x06\x47\xf0\xe3\x47\x61\xd8\x27\x8a\x66\xc1\xd1\xf1\xfa\xa8\xdb\xf0\x2e\x40\x81\x16\xeb\xb2\x35\xcf\xb6\x07\x8d\x36\xd5\xd2\x47\x28\xe4\x92\x09\xfe\x17\xe6\xde\x74\xeb\x9d\x8d\x34\x6f\x2b\x8d\xed\x86\xf7\xce\xac\xcc\xc7\xdc\xde\x6e\x75\x1a\xfd\x08\xed\x2c\x4b\xb0\xd3\x2c\x47\xdf\xb1\xbe\x16\x4b\xc9\x73\xad\x96\x9d\xee\xbe\xae\x6d\x08\xce\xd4\xae\x58\xde\x08\x0d\xc9\x09\x51\x77\x85\x5d\xbf\xd6\x1b\xae\x54\xf9\xcc\x4c\xa7\x5b\xe9\xb9\xf6\xc9\xfb\xf6\x0b\x4d\x52\xea\xfd\x49\x43\xa2\xd3\x6d\x54\x52\x23\x36\x14\x31\x3f\x4e\x46\xcf\x98\xcf\x61\xea\x4d\xbf\xd7\x7a\xf3\x75\x69\xcc\xeb\x32\x95\x6b\x6e\x9b\x99\x9c\xfa\x9c\xff\xb3\x6f\x9f\x8b\x45\x3e\xe3\x60\xb4\x2f\x1d\xde\xcd\x3c\x29\x24\xb6\x9b\x98\x5d\xfb\x45\x9b\x36\x10\xce\x88\xbc\xef\xf9\xcd\xe5\x7f\xfa\xd0\x3a\x77\x8b\x56\xac\xd6\xd9\xd6\xc6\x95\xe3\x76\xba\x0d\x2b\xf9\xc0\x79\x0e\xb3\x70\xb8\x31\x53\xaa\x3e\x3a\x39\xea\x2b\xe7\x67\xfb\x74\x7a\x36\x9e\x9d\xb5\x69\x44\xec\xe5\xbc\x6b\xef\xbd\x01\x6c\xa7\x85\x57\x53\xbb\x32\x9b\x17\xf7\x05\xca\xfb\xdb\x11\x9c\xfc\x5b\x96\x98\xd6\x60\x00\xc5\x20\xa4\xdd\x5a\x23\xb3\x68\x68\xb9\xa6\x22\x56\xf3\x6f\xb8\xa0\xc5\x94\x16\x56\xda\x65\x9d\x28\x04\x68\xb8\xc6\x00\x42\x8e\x22\x00\x45\xdf\x5c\xb4\xc1\x7f\x33\xb4\xb1\x12\xa2\x41\xcd\x09\xd2\x2d\xb1\x7d\xff\x85\xc8\x09\x55\xf2\x05\xda\x0c\x42\x64\x36\xd5\x48\xbb\x6f\xc2\x8c\x81\x25\x32\xc9\x65\x14\xa6\x42\x64\xa0\x74\x80\x84\xee\xc7\xb2\xf1\x88\x56\xd1\x7a\xac\x0d\xac\x62\x05\x81\x92\xed\x7c\x23\x4e\x34\xd2\xe7\x4f\x0f\xbe\xa5\xc6\xd2\x47\x52\x22\x58\x06\xdc\xf6\x0f\x0f\x5a\xc5\xbd\xaa\xeb\x19\x05\x82\xe2\xdf\x6a\x51\xa7\x18\x45\x2f\x8d\x1f\xe0\xad\x56\x6b\xbb\x65\x15\x35\xd5\x73\xf4\x72\xbb\x72\x74\x3a\x79\x7a\xb9\x4e\xe5\xc5\xe4\xa9\xe5\xfe\xb4\x1d\x75\x9e\x51\xee\x48\x45\xdf\x97\x64\xbf\xff\x54\xc7\x81\x67\x95\xbb\x8d\x63\xb9\x93\x67\x94\xcb\x4c\xa5\x27\x3d\xc7\xf5\xd0\xb0\xd6\x59\xb9\xb3\x7c\x59\xbd\x1c\x5f\xe6\x5e\xb9\x32\x29\x15\xdc\xc9\x31\x36\xf4\x1f\xa5\xb5\x43\x91\x7a\xc4\x8c\x3e\x3b\x7d\xc0\xf2\x08\xb6\xa8\xec\x3d\xe5\xfe\x11\xb3\x87\x3d\x65\xde\x6a\xb5\x5a\x79\xc3\x55\x04\x1d\x7d\x53\x1a\xd9\xc2\x3c\xbb\x5e\xb5\x2a\xae\xf0\xd1\xf1\x07\xe0\x1f\xab\x1a\xf9\x88\xfe\x00\xfc\xcd\x9b\xd2\x6e\x55\xe0\x9e\x3f\x14\x13\xb9\x7c\xf6\x1b\xfc\x6e\xc3\xab\x7c\x55\xf0\x52\x87\x07\x44\xdc\x1c\x1e\xfc\x1d\x00\x00\xff\xff\xbd\xa4\x40\x2e\x15\x11\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd3, 0x83, 0xf3, 0x6b, 0xef, 0x27, 0x27, 0x8b, 0xf4, 0xf5, 0xaf, 0xb6, 0x87, 0xca, 0xb6, 0xec, 0xb4, 0x54, 0xce, 0x2a, 0x53, 0x73, 0x40, 0xbc, 0xb2, 0x26, 0x66, 0x44, 0x47, 0xa7, 0x28, 0x2f}}
	return a, nil
}

var _call_tracer_legacyJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x51\x73\xdb\xb6\xb2\x7e\xb6\x67\xfc\x1f\x36\x7e\xa8\xa5\x46\x91\x64\xa7\xb7\x0f\x76\xd5\x3b\xaa\xa3\xa4\x9e\xeb\xc6\x19\x5b\x69\x26\x93\xc9\x03\x44\x2e\x25\xd4\x10\xc0\x02\xa0\x65\xdd\xd6\xff\xfd\xcc\x2e\x40\x8a\xa2\x24\xc7\xcd\xe9\xcc\xe9\x79\x13\x09\xec\x62\xb1\xf8\xf6\xdb\x5d\x50\xbd\x6f\x0f\xf6\xe1\x5b\x80\x73\x93\x2f\xad\x9c\xce\x3c\x9c\xf4\x4f\x8e\xe1\xff\x84\x4d\xa5\x38\x9f\x09\xa9\xc3\xf8\x78\x26\x1d\x64\x52\x21\x48\x07\xb9\xb0\x1e\x4c\x06\x7e\x86\x30\x35\x2f\x6e\x79\x32\x28\x39\xb1\xc2\x2e\xbb\x24\x50\x0a\x6d\x19\x27\x05\x99\x45\x04\x67\x32\xbf\x10\x16\x4f\x61\x69\x0a\x48\x84\x06\x8b\xa9\x74\xde\xca\x49\xe1\x11\xa4\x07\xa1\xd3\x9e\xb1\x30\x37\xa9\xcc\x96\x41\xa5\xf4\x50\xe8\x14\x2d\xaf\xed\xd1\xce\x5d\x69\xc8\x9b\xb7\xef\xe1\x12\x9d\x43\x0b\x6f\x50\xa3\x15\x0a\xde\x15\x13\x25\x13\xb8\x94\x09\x6a\x87\x20\x1c\xe4\xf4\xc6\xcd\x30\x85\x49\x54\x48\xa2\xaf\xc9\x9c\x9b\x68\x0e\xbc\x36\x85\x4e\x85\x97\x46\x77\x00\xa5\x9f\xa1\x85\x3b\xb4\x4e\x1a\x0d\x2f\xcb\xc5\xa2\xca\x0e\x18\x1b\xd4\xb4\x84\xa7\x6d\x58\x30\x39\x49\xb6\x41\xe8\x25\x28\xe1\x57\xc2\x4f\xf1\xcb\x6a\xfb\x29\x48\xcd\x2b\xcd\x4c\x8e\xe0\x67\xc2\xd3\xd6\x17\x52\x29\x98\x20\x14\x0e\xb3\x42\x75\x82\xb6\x49\xe1\xe1\xc3\xc5\xf8\xe7\xab\xf7\x63\x18\xbe\xfd\x08\x1f\x86\xd7\xd7\xc3\xb7\xe3\x8f\x67\xb0\x90\x7e\x66\x0a\x0f\x78\x87\x41\x99\x9c\xe7\x4a\x62\x0a\x0b\x61\xad\xd0\x7e\x09\x26\x0b\x3a\x7e\x19\x5d\x9f\xff\x3c\x7c\x3b\x1e\xfe\x74\x71\x79\x31\xfe\x08\xc6\xc2\xeb\x8b\xf1\xdb\xd1\xcd\x0d\xbc\xbe\xba\x86\x21\xbc\x1b\x5e\x8f\x2f\xce\xdf\x5f\x0e\xaf\xe1\xdd\xfb\xeb\x77\x57\x37\xa3\x2e\xdc\x20\x59\x86\x41\xc3\x97\xdd\x9f\xf1\x51\x5a\x84\x14\xbd\x90\xca\xd5\x1c\xf2\xd1\x14\xe0\x66\xa6\x50\x29\xcc\xc4\x1d\x82\xc5\x04\xe5\x1d\xa6\x20\x20\x31\xf9\xf2\xc9\x47\x1c\xb4\x09\x65\xf4\x94\x37\xbf\x03\xa1\x70\x91\x81\x36\xbe\x03\x0e\x11\x7e\x98\x79\x9f\x9f\xf6\x7a\x8b\xc5\xa2\x3b\xd5\x45\xd7\xd8\x69\x4f\x05\x75\xae\xf7\x23\x1b\xd9\x3b\xd8\x3f\xd8\xef\xf5\x20\x11\x4a\x8d\xad\x48\xd0\xd2\x61\x09\xc8\x0a\x3a\x0e\x65\x16\x1a\xbc\x15\xda\x89\x84\xce\x9e\x7e\x27\x8c\x50\xe1\x01\xef\xe9\xc9\x3b\xc2\x32\x58\xcc\x8d\xa5\xdf\x4a\xb1\x3e\x3e\x12\xed\xd1\x6a\xa1\x58\xb9\x83\xb9\x48\x11\x26\x4b\x10\x75\x8d\x9d\xfa\x96\x08\x58\xe1\xfc\x41\xea\xcc\xd8\x39\x43\xb5\x7b\xb0\xff\xc7\xc1\xfe\x5e\x34\xd2\x79\x91\xdc\x92\x8d\xb4\x42\x52\x58\x8b\xda\x93\x53\x0b\xeb\xe4\x1d\xf2\x14\x08\x73\xa2\x67\x47\xbf\xfe\x02\x78\x8f\x49\x11\x75\xed\x55\x5a\x4e\xe1\xd3\x1f\x0f\x9f\x3b\xe4\x01\xd2\x9e\xa2\x4b\x50\xa7\x98\xf2\x2e\x6f\x1d\x2c\x66\xc8\x21\xb2\xc0\xa3\x3b\x84\xdf\x0a\xe7\x6b\x73\x32\x6b\xe6\x20\x34\x98\x82\x02\xa1\xee\x23\xa9\xbd\x09\x1a\x05\x3d\x68\xb4\x6c\x15\x2d\x5d\x89\x9f\x42\x26\x94\xc3\x6a\x6d\xe7\x31\xa7\x4d\x49\x7d\x67\x6e\x49\xbb\xb1\x04\x6d\xbb\x04\x93\x27\x26\x8d\x61\x42\xdb\xa9\x76\x83\x84\xb2\x3d\x12\x3c\x85\xac\xd0\xbc\x76\x4b\x99\x69\x07\xd2\x49\x1b\xc8\x63\xa4\xf8\x5c\xe4\xbe\xb0\xc8\xae\x45\x6b\x8d\x75\x20\xe7\x73\x4c\xa5\xf0\xa8\x96\x34\xe9\x4e\xd8\x30\x02\x03\x50\x66\xda\x9d\xa2\x1f\xd1\x63\xab\x7d\x46\xc3\x32\x83\x56\x18\x7e\x36\x18\x30\x41\x65\x52\x63\x1a\x57\xd8\xf3\x33\xe9\xba\x99\x28\x94\xaf\xd6\x66\xb1\x3d\x8b\xbe\xb0\x9a\x7f\x3f\x44\x5b\x3e\x20\x18\xad\x96\x90\x10\x15\x89\x09\x85\xaf\x5b\x3a\x8f\xf3\xb8\x49\xd7\x81\x4c\x38\x72\xa7\xcc\x60\x81\x90\x5b\x7c\x91\xcc\x90\x8e\x52\x27\x58\xda\xea\x96\x8e\x0f\x79\x00\xb4\x62\xd7\xe4\x5d\x6f\xde\x16\xf3\x09\xda\x56\x1b\xbe\x81\xfe\x7d\xd6\x6f\xc3\x60\xc0\x3f\xaa\x1d\x44\xa1\xd2\x6a\xd2\x63\xf2\xb8\x61\xd6\x70\xe3\xad\xd4\xd3\xb8\xe7\xd2\xe0\x8b\x0c\x04\x68\x5c\x40\x62\x34\x63\x9d\x8e\x68\x82\x52\x4f\x21\xb1\x28\x3c\xa6\x1d\x10\x69\x0a\xde\x04\x34\x56\xd8\x6b\x2c\x0b\xdf\x7c\x03\x2d\x5a\x6f\x00\x47\xe7\xd7\xa3\xe1\x78\x74\x04\x7f\xfe\x09\xe1\xcd\x61\x78\x73\x72\xd8\xae\x5b\x27\xf5\x55\x96\x45\x03\x59\x65\x37\x47\xbc\x6d\x1d\xb7\xbb\x77\x42\x15\x78\x95\x45\x53\xe3\xe4\x91\x4e\x61\x10\x85\x9e\x37\x85\x4e\xd6\x85\x58\xac\xd7\x83\xa1\x73\x38\x9f\x28\xdc\x8c\xd5\x18\xcd\x1c\xd8\xce\x13\xaf\x11\x1e\x13\x33\xcf\x15\x12\xcc\xaa\x85\xe3\x41\x04\xb3\xf7\xfc\x32\xc7\x53\x00\x00\x93\x77\xc2\x1b\x0a\x12\x7e\xe3\xcd\xcf\x78\xcf\xe7\x55\xba\x92\x70\x36\x4c\x53\x8b\xce\xb5\xda\xed\x38\x5f\xea\xbc\xf0\xa7\x6b\xf3\xe7\x38\x37\x76\xd9\x75\xc4\x5b\x2d\xde\x60\x27\xec\xb7\x12\x9a\x0a\x77\xa1\x49\x28\xa2\xf7\x8d\x70\xad\xda\xd8\xb9\x71\xfe\xb4\x1c\xa3\x87\x6a\x90\x9d\x42\x82\x47\xfd\xfb\xa3\x4d\xb7\xf5\xdb\x2b\x5c\x1c\x7f\xdf\x66\x99\x87\xb3\x15\xea\x2b\x1e\xe9\xe6\x85\x9b\xb5\x18\x5f\xb5\xe1\x15\x55\x0c\xc0\xdb\x02\x77\x45\x05\x83\x6c\x13\x60\x0e\x55\x46\x74\xe3\x6d\x91\x30\xd0\xa6\x82\xc9\x88\x89\x40\x10\x45\xbb\x62\xc2\xfe\xf7\xc6\x6c\xc1\x5b\x84\xdb\xcd\xe8\xf2\xf5\xab\xd1\xcd\xf8\xfa\xfd\xf9\xf8\xa8\x0e\x30\x85\x99\x27\xcb\xd6\x77\xa2\x50\x4f\xfd\x2c\xec\x82\x14\xae\x0f\x7f\x22\xa1\x17\xc7\x9f\xc3\x1b\x18\x6c\x23\x84\xbd\xc7\x45\xe0\xd3\xe7\xa0\xfd\x61\x8b\x23\xd7\x27\x07\xb7\xfe\x6d\xd8\xf2\x86\x67\x97\xf3\xbd\x29\x67\x3c\x7e\xec\x7f\x3f\xcc\xd2\x09\x4d\xf9\x49\x28\xa1\x13\x7c\xc4\xee\x2d\xe8\x5b\xe3\xd6\xad\x4c\x35\x47\x3f\x33\x29\xe7\x91\x44\x84\x74\x54\x22\x2a\x35\x1a\xbf\x82\xaf\x86\x97\x97\x35\xb6\xe2\xe7\xf3\xab\x57\x75\x06\x3b\x7a\x35\xba\x1c\xbd\x19\x8e\x47\xcd\xb9\x37\xe3\xe1\xf8\xe2\x9c\xdf\x56\xe4\xd6\xeb\xc1\xcd\xad\xcc\x39\x21\x31\xc1\x9b\x79\xce\xb5\x77\x65\xb1\xeb\x80\x9f\x19\x2a\x6a\x6d\xcc\xba\x99\xd0\x49\x99\x09\x5d\x85\x60\x6f\x08\xbf\xbb\x8e\xf1\xb8\x71\x8c\x2b\x4c\x4b\xf7\xce\x62\x5c\x36\x6d\x79\x53\x99\x56\xf3\x6b\x84\x27\xe7\x09\xe6\xe1\xd6\xd3\xb7\x0a\xff\x0b\x7d\x38\x85\xe3\x8a\x6b\x1f\xe1\xf3\x13\x78\x4e\x0b\x7c\x0d\xab\xbf\xdc\x26\xfa\x0f\xe6\xf6\x8d\xf8\xfb\xcf\x90\xbe\x29\xfc\x55\x96\x9d\x42\xd3\x9d\xdf\x6d\xb8\x73\x25\x70\x89\x7a\x53\xe0\x7f\x36\x04\xea\x19\x82\x80\x66\x72\x78\xb6\x01\x99\x40\xcd\xcf\x1a\xd1\x51\xba\x99\x0b\x45\x56\x08\x83\x1d\x69\xe9\x64\x1d\xd8\xbb\xd9\xf4\xdf\x4e\x4b\x5b\xeb\x5e\xaa\x6e\xd7\x0b\xdb\x0e\x58\xf4\x56\xe2\x1d\x35\xb6\x47\x8e\xb5\x52\x1f\x60\x16\x44\x70\x5d\xf8\x80\x51\xa5\x46\x64\xee\x89\x8d\x03\x55\x79\x5c\x45\x53\xed\x1f\x5b\x42\x06\x9d\xe0\xe2\xde\x22\xcc\xc5\x92\x5a\xc2\xac\xd0\xb7\x4b\x98\x0a\x07\xe9\x52\x8b\xb9\x4c\x5c\x54\xc8\x4d\x83\xc5\xa9\xb0\xac\xd7\xe2\xef\x05\x3a\x6a\x30\x09\xdc\x22\xf1\x85\x50\x6a\x09\x53\x49\x3d\x22\x89\xb7\x4e\x5e\xf6\xfb\xe0\xbc\xcc\x51\xa7\x1d\xf8\xfe\x65\xef\xfb\xef\xc0\x16\x0a\xdb\xdd\x92\x01\xd7\x7d\x54\x9e\x0b\x8d\x44\x30\xbd\xc2\xdc\xcf\x5a\x6d\xf8\x71\x47\xee\xdc\x95\x07\xb7\x4e\x86\x17\x70\xfc\xb9\x4b\xa6\x0d\xd6\x80\x1c\x0f\x15\x50\x39\x2c\xf5\xf5\x7a\x30\xbe\x7a\x75\xd5\xba\x15\x56\x28\x31\xc1\xf6\x29\x37\xdb\xec\xb1\x85\x88\xed\x15\x9d\x0d\xe4\x4a\x48\x0d\x22\x49\x4c\xa1\x3d\xf9\xbf\xec\x93\xd4\x92\x92\xc0\x91\xaf\x14\x72\x47\x2a\x92\x04\x9d\x2b\x93\x02\x9f\x1e\x59\x24\xe6\x24\x0e\x52\x3b\x99\x62\xed\x70\x88\x37\x0c\xd3\x77\x9c\x41\x9d\x7b\xa5\x71\x6e\x1c\x2d\x33\x41\x58\x58\xea\xeb\x9c\xd4\x09\x5f\x78\xa4\x48\x4e\x77\x60\x34\x08\x50\x86\x2f\x59\x38\xf2\x41\xd8\xa9\xeb\x86\xa4\x40\xeb\x12\x1d\x69\xb3\xe8\x36\x71\x5d\x07\x2e\x37\x4f\x1b\x55\x94\x06\xbc\x97\xce\x73\x79\x4e\xa6\x4a\x07\x01\xd8\x52\x4f\x3b\x90\x9b\x9c\xb9\xfc\x8b\x99\x2f\x32\xfa\xf5\xe8\xd7\xd1\xf5\xaa\x66\x7a\xfa\x71\x96\xcd\xd4\x61\xd5\x75\x82\xa5\x5e\xce\x63\x7a\xb8\xbd\x37\xda\x02\xaf\xc1\x0e\x78\xd1\x12\xb5\x54\xfa\xae\xb6\x29\x25\x9c\x5f\x9d\xd1\x14\x43\xbf\x58\x37\xc2\x15\xca\xbb\x26\xc1\x37\x49\xc3\xe4\xab\x4c\x42\x86\x31\x25\x11\xfd\x37\xdb\x97\xb5\x81\x55\x17\x53\xc3\xeb\x45\xcd\xdb\x0b\xae\x59\xc3\xac\x1a\x63\xf0\x78\x59\xfc\x8a\x90\x33\xd8\x7e\x53\x78\x02\x07\xa5\xfc\x1a\x35\x4e\x85\x7b\xef\x18\x02\x91\x1c\x27\x72\x7a\xa1\x7d\xab\x1c\xbc\xd0\xf0\x02\xca\x07\xe2\x7d\x78\xb1\x16\x58\xdb\xb8\x73\x2f\x45\x85\x1e\x61\xa5\xe3\x0c\x1a\xaf\x48\x53\xe9\x13\xf6\x9d\x45\xbf\x99\xcc\xfb\xa5\x42\x72\xdb\x33\x8b\xbe\x8b\xbf\x17\x42\xb9\x56\x7f\x55\x62\x84\x6d\x78\xc3\x99\x70\xb0\x51\x8b\x92\xd0\x7a\xf5\x79\x56\x97\x8b\x4e\x29\xe5\x42\x25\x79\x6e\x52\x7c\x54\x45\xa9\x23\xf2\x49\x75\xa8\x11\xa8\x5b\xab\xf8\xbd\xfa\x0c\x38\xac\x4a\x88\x4c\x48\x55\x58\x3c\x3c\x83\x2d\x7c\xe4\x0a\x9b\x89\x84\x0f\xd5\x21\xf0\xad\x80\x03\x67\xe6\x38\x33\x8b\x68\xc2\x76\x62\xdb\x04\x4a\x85\x89\x46\x86\xe1\x5b\x2f\xe1\xa0\x70\x62\x8a\x35\xa0\xac\x1c\x5f\x9e\xd9\xf6\xfb\x8a\xaf\xc6\xd1\xf3\xea\xf1\x29\x90\x7a\xf8\xdb\xa0\xd2\x38\xf2\x8d\xea\xa8\x9c\xc4\x35\x52\xed\xa1\x34\x38\x94\x2f\xff\x3c\x0c\x3c\x3d\xea\x9a\x93\xc3\xfe\xd6\x67\x87\x5d\xd6\x6b\xa1\x27\x40\xa1\x1a\xde\x85\x82\xdd\x95\x16\x61\x56\xff\x86\x89\x5f\xe1\x96\x0b\x23\x7a\xca\x2d\xde\x49\x53\x50\xaa\xc3\xff\xba\x76\x7b\x55\x2e\x92\xc4\x43\x75\x41\xc9\x07\x59\xbf\xa1\x5c\xcc\xe2\xc5\x7b\xa8\xb3\x6a\x79\xc6\x70\x2a\x8e\xf7\x96\x59\xbc\x0e\xdf\x63\x05\x8f\xdd\x54\x46\x0e\xf0\x26\xa7\x1a\x22\x26\x32\x65\x51\xa4\xcb\x2a\x7f\x76\x42\xfd\x02\x33\xa1\xd3\xd8\xdc\x88\x34\x95\xa4\x90\x71\x49\x36\x8a\x29\x7f\xd9\xd9\xea\xd0\x2f\x66\xed\xad\x40\xd9\x52\x1d\xd7\xf3\x6e\x6c\x51\xa9\x9b\x64\xab\xcb\x8b\xca\xc7\xf3\x6b\x23\xba\x36\x6e\x5e\xe3\x42\xe7\x46\xbb\x62\xce\xf5\x34\x88\x3b\x21\x95\xa0\xae\x8e\xeb\x33\x9d\x42\xa2\x50\xe8\xf0\x3d\x06\x33\x6f\xee\xd0\xba\x72\xe7\x8f\x63\xff\xab\xa0\xdf\x60\xce\xf2\xb1\xf2\xcb\x5f\x88\xe8\x27\xc7\x73\x74\xc3\x6b\x25\xbc\x8f\x80\xab\xb9\x3a\x04\x9d\xf4\xfc\xdd\x0e\xb5\x2f\x5d\xff\xc5\x68\xe3\x8a\x8b\x26\xfd\x08\xfd\x7a\x91\xff\x4f\x0a\xc0\x6d\xb8\xbb\xac\x6a\xbc\xe8\x05\x6f\x4c\x07\x14\x0a\x6e\xbe\xca\x0f\x6b\x55\x65\xfb\x68\x43\xb8\x0a\xee\x50\x19\x6e\x44\x37\x5f\x2e\xce\xb0\xbc\x78\x09\xdd\xc2\x04\x51\x83\xf4\x68\x05\x35\x5a\x04\xb9\xf8\xfd\x87\x6c\x75\x41\x1f\x9f\x92\xa4\x90\x8c\x9a\xe3\xa7\x18\xca\xe8\x52\x4f\x89\x0e\xc2\x40\x8d\x0f\x12\x7f\x5f\xe3\x83\x90\x38\x59\xb6\xbc\x82\xa8\x6e\x20\x12\x7f\xcf\x65\x67\xe8\xcf\x1b\xd7\x10\x34\x48\xaf\x62\xf7\xde\xb8\x74\x60\xd1\xf2\xe2\xa1\x79\x2f\x47\x83\xfc\x6e\x0d\xfa\x61\xee\x54\xb8\xa0\xa8\x11\x2d\xfe\x7e\x33\x58\x2a\x09\x8a\x93\xd3\xed\x12\x34\xb4\x4d\xaa\x71\x17\x42\xb3\xf9\x55\x1c\x0e\xc5\xc0\x69\x7d\x38\xbc\x2a\xb7\x2b\xe7\x35\x1f\xc9\x79\xf0\xd1\xc3\xd9\x0e\x3a\xec\x97\x30\xdd\x41\x7b\xe4\xff\x0a\xc8\x3b\x64\xd7\xbb\x98\xcd\x49\x8f\xf2\x2a\x2f\x50\x52\xe0\x0e\xd9\xb0\x40\xad\x6c\xf1\xf7\x7f\x41\x69\x35\x7b\xdd\xce\xb5\x59\x6b\x7a\xf8\xee\x73\x63\x78\x5b\x2f\x47\x3d\x50\x9c\x58\x16\x69\x83\xc1\x61\xff\x7e\xf5\x21\x27\x32\xda\xda\xa4\x95\x1d\x21\x64\xc2\xb6\x39\x5a\xe4\xff\x63\x5c\xb9\x11\x9f\xe5\x28\x58\x0c\xdf\x9d\xb8\x42\xa6\xf0\x34\x13\x2e\x42\x0a\x47\x4d\xef\x2a\xec\x52\x74\xd2\x62\x0a\x99\x44\x95\x82\x49\xd1\x72\x5b\xfd\x9b\xe3\xfb\xbd\x5e\x0f\x1c\x5a\x49\x2a\xc3\x07\xd6\xf0\x17\x08\xfe\xee\xab\x65\x82\x7e\x09\x19\x0a\xfe\x6c\xe8\x0d\xe4\xc2\x39\x98\xa3\xa0\x2e\x3a\x2b\x94\x5a\x82\xb1\x29\x92\xf6\x55\x43\x49\x31\x6f\xa0\x70\x68\x1d\x2c\x66\x26\x66\x69\x2e\x18\x73\xaa\x7f\xa5\xef\xc4\x7b\x24\xe9\x72\x25\x96\x20\x3d\xd7\x04\x71\x5f\x75\x1a\x58\x7d\xa5\xe3\x8f\x7d\x86\x5c\xbd\x85\x03\xca\xde\xb3\x41\x02\xfc\x9e\x9e\x1a\xe1\x1f\xbb\xae\x46\xe0\xaf\x6e\xdb\x1a\x51\x5e\xe6\xab\x46\x28\xd7\x13\x60\x23\x5e\x79\x88\x9f\x1a\x91\x5a\x2b\xe2\xc3\x08\x83\xaa\x12\xe1\xa7\x66\xf0\xb2\xb1\x65\xf4\x86\xef\xd5\x95\x00\x3f\x75\x2a\x10\xd1\xb1\xb6\xc8\x53\xb7\xb8\x24\xfa\x0f\x0e\xab\xa7\xb4\xf0\xe6\xd3\x2d\x2e\x3f\xef\xc8\x60\x11\xa6\xb5\x89\xb5\x94\x55\x85\x4c\x18\x7e\x8c\x30\x2a\x5b\xe4\xa0\x7f\x06\xf2\x87\xba\x44\x99\x7c\x41\x3e\x7f\x5e\x2d\x5c\x9f\xf0\x49\x7e\x2e\x39\xa0\x0a\x86\xc6\x78\xbb\x69\x56\x8c\xa0\x30\x8d\x43\xe6\x60\xff\xe1\x60\xff\x5f\x01\x00\x00\xff\xff\xe7\x2e\xe8\x5b\xf9\x23\x00\x00")

func call_tracer_legacyJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracer_legacyJs,
		"call_tracer_legacy.js",
	)
}

func call_tracer_legacyJs() (*asset, error) {
	bytes, err := call_tracer_legacyJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer_legacy.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x27, 0x80, 0x50, 0x85, 0x98, 0x91, 0x22, 0x4b, 0x3f, 0x7, 0xe, 0xdf, 0xcd, 0x74, 0x93, 0xcf, 0xc9, 0x3b, 0xd, 0x4f, 0x86, 0x1c, 0x5d, 0x79, 0xff, 0x4, 0x5f, 0xaf, 0xc9, 0x31, 0xe4}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x97\xdf\x6f\x1a\xbb\x12\xc7\x9f\x89\x94\xff\x61\x94\x27\x38\xa5\xc0\x2e\x0b\x25\x9b\x93\x23\x71\x29\xed\xe1\xde\x34\x89\x80\xdc\xa3\x0a\xe5\xc1\xc0\x2c\x58\x5d\xd6\x2b\xdb\x4b\x0e\xb7\xca\xff\x7e\x35\x1e\x2f\x90\x5f\x6a\x2b\xdd\x5b\xa9\xeb\xee\x7a\xe6\x33\x5f\xcf\x8c\x6d\xda\xfc\xed\xf4\x04\x7e\x03\x18\xa8\x7c\xa7\xe5\x6a\x6d\x21\x6c\x85\x01\xfc\x4b\xe8\xa5\x14\x83\xb5\x90\x19\xcf\x4f\xd7\xd2\x40\x22\x53\x04\x69\x20\x17\xda\x82\x4a\xc0\xae\x11\x56\xea\xfd\x37\x67\x0c\xa9\x9c\x6b\xa1\x77\x0d\x72\x28\x9d\x5e\x99\x27\x40\xa2\x11\xc1\xa8\xc4\x3e\x08\x8d\x31\xec\x54\x01\x0b\x91\x81\xc6\xa5\x34\x56\xcb\x79\x61\x11\xa4\x05\x91\x2d\x9b\x4a\xc3\x46\x2d\x65\xb2\x63\xa4\xb4\x50\x64\x4b\xd4\x2e\xb6\x45\xbd\x31\xa5\x90\xcf\xd7\x77\x70\x85\xc6\xa0\x86\xcf\x98\xa1\x16\x29\xdc\x16\xf3\x54\x2e\xe0\x4a\x2e\x30\x33\x08\xc2\x40\x4e\x5f\xcc\x1a\x97\x30\xf7\x40\x72\xfd\x44\x72\x26\x5e\x0e\x7c\x52\x45\xb6\x14\x56\xaa\xac\x0e\x28\xed\x1a\x35\x6c\x51\x1b\xa9\x32\x68\x97\xc1\x3c\xb2\x0e\x4a\x33\xa6\x2a\x2c\x2d\x43\x83\xca\xc9\xb3\x06\x22\xdb\x41\x2a\xec\xc1\xf9\x67\xf2\x72\x58\xfe\x12\x64\xe6\x22\xad\x55\x8e\x60\xd7\xc2\xd2\xd2\x1f\x64\x9a\xc2\x1c\xa1\x30\x98\x14\x69\x9d\x69\xf3\xc2\xc2\x5f\xa3\xe9\x9f\x37\x77\x53\xe8\x5f\x7f\x85\xbf\xfa\xe3\x71\xff\x7a\xfa\xf5\x02\x1e\xa4\x5d\xab\xc2\x02\x6e\x91\x61\x72\x93\xa7\x12\x97\xf0\x20\xb4\x16\x99\xdd\x81\x4a\x98\xf1\x65\x38\x1e\xfc\xd9\xbf\x9e\xf6\xff\x31\xba\x1a\x4d\xbf\x82\xd2\xf0\x69\x34\xbd\x1e\x4e\x26\xf0\xe9\x66\x0c\x7d\xb8\xed\x8f\xa7\xa3\xc1\xdd\x55\x7f\x0c\xb7\x77\xe3\xdb\x9b\xc9\xb0\x01\x13\x24\x65\xc8\x84\x1f\xa7\x3f\x71\xa5\xd4\x08\x4b\xb4\x42\xa6\xe6\x28\x21\x5f\x55\x01\x66\xad\x8a\x74\x09\x6b\xb1\x45\xd0\xb8\x40\xb9\xc5\x25\x08\x58\xa8\x7c\xf7\xd3\x25\x66\x9a\x48\x55\xb6\x72\x8b\x7f\xa3\x43\x61\x94\x40\xa6\x6c\x1d\x0c\x22\xfc\xbe\xb6\x36\x8f\x9b\xcd\x87\x87\x87\xc6\x2a\x2b\x1a\x4a\xaf\x9a\x29\xe3\x4c\xf3\x0f\x27\xb2\x79\x7a\x72\x7a\xd2\x6c\x02\x6e\x37\x4b\x69\xa6\x5a\x2c\x50\x83\x46\x5b\xe8\xcc\x80\x29\x92\x44\x2e\x24\x66\x16\x64\x96\x28\xbd\x71\xad\x03\x89\x56\x1b\x10\x60\xc9\x18\xac\x82\x1c\x35\x4d\x7a\xc6\x7b\x63\x77\x29\x3a\xe8\x52\x1a\x61\x0c\x6e\xe6\x29\x6d\x9d\xef\xa7\x27\x15\x63\xc5\xe2\x5b\x0c\xb3\xef\x2a\x37\x31\xcc\xee\x1f\xef\xeb\x24\xa0\x92\xe5\x85\x59\xa3\x89\xe1\x7b\x2b\x86\x56\x1d\x82\x18\x82\x3a\x84\xee\xd9\x76\xcf\xc8\x3d\x3b\xee\xd9\x75\xcf\x0f\xee\xd9\x73\xcf\x73\xf7\x0c\x5a\x3c\xb0\x77\xc0\x66\x01\xdb\x05\x6c\x18\xb0\x65\xc8\x96\xa1\x8f\xc3\x81\x42\x8e\x14\x72\xa8\x90\x63\x85\x4c\x69\xb3\x49\xc4\x94\x88\x29\x1d\xa6\x74\x98\xd2\x61\x93\x0e\x53\x3a\x5e\x70\xc7\xad\xa7\xc3\x94\xce\x07\x7e\x63\x4a\x87\x29\x5d\x5e\x72\x97\x1d\xba\x7e\x89\xec\xd0\x65\xf1\x5d\x76\xe8\xb2\x43\x8f\x1d\x7a\x1c\xb6\x17\xf2\x5b\x9b\x07\xa6\xf4\x38\x6c\xaf\xcb\x03\x87\xed\x31\xa5\xc7\x94\x73\x16\x7f\x1e\xb8\xb9\x73\x8e\x77\xce\xf1\xce\x7d\x56\xcb\xb4\xfa\xbc\xb6\x7c\x62\x5b\xa1\x1f\xdb\x7e\x8c\xfc\xd8\xf1\xa3\xcf\x7c\xcb\xa7\xbe\xe5\x73\xdf\xf2\xbc\x7d\x9d\x3c\x2f\xf0\xbc\xc0\xf3\x02\xcf\x0b\x3c\xaf\xac\x64\x59\xca\xb2\x96\xbe\x98\x81\xaf\x66\xe0\xcb\x19\xf8\x7a\x06\xbe\xa0\x81\xaf\x68\xe0\x4b\x1a\xf8\x9a\x06\xa1\xe7\x85\xbd\x18\x42\x1a\xcf\x63\x68\xd7\x21\x68\xb7\x62\x88\x68\x0c\x62\xe8\xd0\x18\xc6\xd0\xa5\xb1\x1d\xc3\x07\x1a\xa3\x18\x7a\x34\x76\x62\x38\xa7\x91\x78\xd4\xb5\x6d\x02\x12\xb1\x4d\x0a\x09\xd9\x26\x89\xc4\x8c\x48\x23\x41\x23\x12\x49\xd4\x88\x54\x12\x36\x22\x99\xc4\x8d\x22\xd6\x11\x75\x58\x47\xd4\x65\x1d\xd1\x07\xd6\x41\xdd\xe7\x1c\xce\x59\x07\xf5\x1f\xe9\xa0\x06\x24\x1d\xae\x03\x49\x87\xeb\x41\xd2\xe1\xba\x90\x90\xd4\x87\x4e\x87\xeb\x44\x82\x52\x2f\x3a\x1d\xae\x1b\x09\xeb\xfa\x91\xb8\xbe\x23\x83\x6e\xe0\xc7\xd0\x8f\x6d\x3f\x46\x6e\x0c\x23\xbf\x8b\x22\xbf\x8d\x22\xbf\x8f\xa2\xb6\x9f\xf7\x76\x6e\x13\x3c\xf2\x4e\x6f\x36\x41\xa3\x29\x52\x4b\x97\x82\xcc\xb6\xea\x1b\x1d\xda\x6b\xcc\x40\xa4\xa9\x3b\xd4\x54\xbe\x50\x4b\x34\x7c\x5c\xce\x11\x33\x90\x16\xb5\xa0\x8b\x43\x6d\x51\xd3\xd5\x59\x9e\x50\xcc\x23\xa7\x44\x66\x22\x2d\xc9\xfe\x4c\xa5\x03\x4a\x66\xab\xc6\xe9\x49\x85\x27\x62\x48\x8a\x6c\x41\x67\x58\xb5\x06\xdf\x3d\x04\xec\x5a\x9a\x86\x3b\x98\x66\xad\xfb\x86\xca\xcd\x05\x1c\xb4\x26\xe2\x35\xa9\x44\x17\x0b\x5b\x88\x14\xf0\x6f\x5c\x14\xee\x58\x54\x09\x88\xcc\xab\x87\xc4\x5f\x03\x15\x07\x38\x0a\x9c\xaa\x55\x1d\x96\x73\x8a\x7f\x88\x62\x2c\xe6\xc7\x41\xe8\x3e\xc1\x2d\xea\x5d\x89\x73\xb7\x24\x45\xfd\xf7\x17\x1f\x11\x1d\x9d\x1c\x5f\x85\x9f\x9e\x54\x2a\x5b\xa1\x21\xd1\x62\x83\x70\x79\xbc\xc8\xc3\x3f\x1b\x29\x66\x2b\xbb\x86\xf7\x10\xdc\x5f\x38\x2d\xce\x07\xb5\x56\x1a\x2e\x21\x55\xab\xc6\x0a\xed\x90\x5e\xab\xb5\x0b\x9a\x96\x09\x54\xdd\xb4\x0f\x51\x71\xfc\xd9\x99\xfb\x76\x76\x0f\x97\xec\xec\x6c\x1f\x01\x53\x83\x40\x2e\x9e\xf4\x11\x73\xbb\xae\xd6\xe0\xf2\x58\x8f\x17\x51\x02\x55\x4e\x57\x0d\x5c\xfa\xd7\x8a\xca\x63\xa0\x3f\x84\x50\x79\xc3\xaa\xeb\x62\x33\x47\x5d\xad\xd5\x79\x7e\x49\x4c\x88\xe1\x69\x08\x3f\x59\x96\x7d\x76\xcf\x1f\x1e\x9d\x30\xb7\x0a\x27\x9c\xaa\x5d\x26\xe1\x0f\x68\x95\x1a\x5c\x16\x72\x8d\x5b\x95\xc3\x25\xec\x2d\x67\x2f\x7c\x7c\xe2\xc8\x25\x51\xba\x4a\x6e\x12\x2e\xa1\x75\x01\x12\x7e\xe7\x35\xfa\x9b\x6d\xc6\xb8\x86\xca\xef\x2f\x40\xbe\x7b\x57\x63\xaf\x8a\xff\xcc\x42\x1b\x64\xeb\x92\xc5\x99\xc9\x11\xbf\x55\x65\xad\x61\xd5\xc4\x6a\x99\xad\xaa\x41\xb7\xc6\x75\xa8\x3c\xba\xa7\x79\x90\x76\xc1\x1e\x2e\x37\xde\xac\x56\x2e\x64\x21\x0c\xc2\xd9\xa0\x7f\x75\x75\x16\xc3\xe1\x65\x70\xf3\x71\x78\x16\x1f\x96\x2a\x33\x63\xe9\x77\x2f\x97\xfc\x28\x76\xbb\xd6\xd8\x8a\xb4\xc0\x9b\xc4\xd7\x7f\x6f\x2f\xff\x83\x2f\xcd\xa3\x97\xe6\x5c\xce\xd9\xd9\x4a\x18\xd7\x1e\xcf\x3c\x5a\x6f\x7b\x58\xf5\x9a\x43\xf0\x34\x1b\xcf\x7c\x1c\xeb\x35\xb7\xf0\xc8\xed\xb9\x93\xcc\xf2\xc2\xee\x9d\x36\xb8\x51\x7a\xd7\x30\xf4\x3b\xa9\xea\x13\x53\xdf\x67\xe8\x9d\x5f\xfb\x73\xc6\xa1\xff\xb3\x22\x4d\x9f\x4d\xf2\x39\xf3\xd6\xac\xca\x39\x33\xb3\xb2\x93\x8e\xb6\x86\xeb\x07\x36\x2c\x23\xce\x35\x8a\x6f\x17\x47\xd5\xfd\x38\xbc\x1a\x7e\xee\x4f\x87\x4f\xaa\x3c\x99\xf6\xa7\xa3\x01\x7f\xfa\x89\x3a\x87\xbf\x56\xe7\x57\xda\xe2\xb0\x1a\xb7\x18\x78\xd1\x92\x6f\xf4\xc3\xaf\x37\xc4\xaf\x75\xc4\xa1\xb8\xff\x93\xea\xfe\xa0\xbc\xff\x8f\xfa\x8e\x87\xd3\xbb\xf1\xf5\x71\x19\xe9\xff\x3d\x3f\xb3\x93\xbc\xed\xeb\x35\x0c\x5e\xda\xf3\xf1\xe6\x6f\xc5\x57\x76\x83\x2a\x6c\xdd\x05\x7f\x57\x62\xdf\x14\x3d\x99\xde\xdc\x1e\x9a\xf1\x6e\x34\x18\x1d\x4e\x9c\x1f\x85\x69\xd5\xa1\xf5\x26\xf8\x9f\x77\x5f\x6e\x3f\x0e\x27\xd3\x12\x56\x66\x39\x5f\xec\x77\xf0\x0a\xed\xed\xa0\xfa\xe4\x9c\x94\x49\x79\x46\x4a\x73\x4b\x39\xdf\x9f\x90\x7b\x40\x8a\xd9\x9e\xf0\xe4\x9e\x81\xf7\xd0\xfa\xbb\x83\xc7\xb8\xc3\x3d\xf0\xa2\x80\xfe\xd2\x63\xf8\xa1\xd2\x4f\x6e\xe0\xc3\x3a\x9f\x5e\x5a\x9e\x70\x7a\x42\x7f\x1f\x4f\x4f\xfe\x1b\x00\x00\xff\xff\x73\x81\x66\xc2\xc1\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0xc6, 0xc8, 0x83, 0x74, 0x1f, 0xf, 0xb6, 0xb2, 0x12, 0x42, 0x16, 0xfd, 0x93, 0xe5, 0xc5, 0x2a, 0xe8, 0x72, 0x11, 0x99, 0xe1, 0xe4, 0xa3, 0xa9, 0x19, 0x5c, 0xc4, 0x7c, 0xab, 0x75, 0x71}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\x46\x10\x85\xcf\x16\xa0\xff\xf0\x8e\x49\xa0\x8a\x6d\x7a\x73\x8a\x02\xaa\x61\x27\x6a\x1d\xd9\x90\xe8\x06\x3e\x0e\xc9\xa1\xb8\xc9\x7a\x87\x9d\x9d\x95\x22\x18\xfe\xef\xc5\x92\x12\xe2\x43\x82\xf8\x26\x68\x38\xdf\x7b\x33\xf3\xc8\xe2\xcd\x74\x82\x37\xc0\x85\xf4\x07\x75\xdb\xce\xf0\xf6\xd7\xb7\xbf\xe1\x1f\xd2\xc6\xd1\x45\x47\x2e\x8c\xf5\xb2\x73\x11\xad\xf3\x0c\x17\xd1\x93\x1a\xa4\x85\x75\x8c\xad\xfc\xf2\x65\x78\x18\xde\x55\x4a\x7a\x98\xe7\x86\x53\xd3\x77\xea\x19\xd0\x2a\x33\xa2\xb4\xb6\x27\xe5\x73\x1c\x24\xa1\xa6\x00\xe5\xc6\x45\x53\x57\x25\x63\x38\x03\x85\xa6\x10\xc5\x83\x34\xae\x3d\x8c\x48\x67\x48\xa1\x61\x1d\xb4\x8d\xf5\x21\x9e\x8c\xbc\x5f\xdd\xe1\x9a\x63\x64\xc5\x7b\x0e\xac\xe4\x71\x9b\x2a\xef\x6a\x5c\xbb\x9a\x43\x64\x50\x44\x9f\xff\x89\x1d\x37\xa8\x8e\xc0\xdc\x7a\x95\xed\x6c\x8e\x76\x70\x25\x29\x34\x64\x4e\xc2\x0c\xec\xac\x63\xc5\x8e\x35\x3a\x09\xf8\xfd\x24\x76\x44\xce\x20\x3a\x62\x5e\x91\xe5\x31\x14\xd2\xe7\xce\xd7\xa0\x70\x80\x27\xfb\xd6\xfc\x92\xbd\x7c\x1b\xbf\x81\x0b\x83\x52\x27\x3d\xc3\x3a\xb2\x3c\xfa\xde\x79\x8f\x8a\x91\x22\xb7\xc9\xcf\x46\x5a\x95\x0c\x9f\x96\xe5\x87\x9b\xbb\x12\x8b\xd5\x3d\x3e\x2d\xd6\xeb\xc5\xaa\xbc\x7f\x87\xbd\xb3\x4e\x92\x81\x77\x3c\xc2\xdc\x43\xef\x1d\x37\xd8\x93\x2a\x05\x3b\x40\xda\x91\xf1\xf1\x72\x7d\xf1\x61\xb1\x2a\x17\x7f\x2d\xaf\x97\xe5\x3d\x44\x71\xb5\x2c\x57\x97\x9b\x0d\xae\x6e\xd6\x58\xe0\x76\xb1\x2e\x97\x17\x77\xd7\x8b\x35\x6e\xef\xd6\xb7\x37\x9b\xcb\x39\x36\x9c\x9d\xf1\x48\xf8\xf9\xfa\xdb\xe1\x94\xca\x68\xd8\xc8\xf9\xf8\x6c\x21\xf7\x92\x10\x3b\x49\xbe\x41\x47\x3b\x86\x72\xcd\x6e\xc7\x0d\x08\xb5\xf4\x87\x17\x9f\x78\xa4\x91\x97\xb0\x1d\x86\xff\x41\x42\xb1\x6c\x11\xc4\x66\x88\xcc\xf8\xa3\x33\xeb\xcf\x8b\x62\xbf\xdf\xcf\xb7\x21\xcd\x45\xb7\x85\x1f\x71\xb1\xf8\x73\x30\x59\x4c\x27\xd3\x49\x51\x20\x88\xf4\xa5\x52\xcd\x9a\x8f\xf5\x39\x45\x1b\x04\x2a\x52\xae\x24\x30\x2a\x71\x9e\xb5\xcf\x67\x47\x2d\x4d\x9e\xe3\xbf\xe4\x94\x1b\xb4\x2a\x0f\x20\xfc\x4d\x3b\xda\xd4\xea\x7a\x1b\x78\x52\x7d\xe6\xda\x60\x32\xde\x94\x2a\x3f\x84\x94\x60\x4a\x21\x52\x9d\x93\x94\x7f\xd7\xac\xf3\xe9\xe4\x71\x3a\x39\x2b\x0a\x44\xe3\x3e\xcb\xbb\xb0\x93\x2f\x19\x2d\x9a\x0f\xac\x07\x48\x3f\x88\x0e\x61\xc9\xbe\xfe\xfd\x08\xfe\xca\x75\x32\xce\xbb\x3e\xcb\x8d\xe7\x68\x53\x18\xb8\xaf\xbc\x6c\x67\x68\xaa\xd7\x78\xc4\xd3\x2c\x0f\x98\xe1\x2d\x25\x6f\xcf\xe9\xfb\xee\x18\x1d\xaa\x2d\x91\x3f\x02\xb3\x2f\x69\x41\xe1\xa4\xd9\x1e\x0f\x7a\x36\x00\x7e\xa6\xa2\x1c\xbf\x27\x43\xde\x0f\x52\x23\x33\x8e\x51\xa8\x98\x03\x9c\xb1\x52\x7e\x29\x64\xc7\x9a\x3f\x0b\x50\xb6\xa4\x21\x8e\xbc\xdc\xd4\xba\x40\xfe\x44\x3e\xe6\x25\xaf\xce\x85\x6d\xf6\x35\x16\x9e\x19\xab\xed\xeb\xc9\xd8\xc8\xc2\xe3\xd3\x3b\x3c\x4d\x27\x4f\xd3\xc9\xff\x01\x00\x00\xff\xff\x9e\x20\xdd\xf3\x15\x05\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0xae, 0xc6, 0xe1, 0x98, 0x31, 0xff, 0xc8, 0x3e, 0x92, 0x4b, 0x21, 0x46, 0x5d, 0x9e, 0x7b, 0xc4, 0xcc, 0x4a, 0xb3, 0xc4, 0xad, 0x56, 0xff, 0x4f, 0x9a, 0x22, 0x8a, 0x1d, 0xba, 0x1a, 0x3}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4d\x6f\xdb\x46\x10\x86\xcf\x16\xa0\xff\xf0\x1e\xf3\xa1\x8a\x69\x7a\x73\x8b\x02\xaa\x61\x27\x42\x6d\xd9\x90\xe4\x04\x3e\x0e\xc9\xa1\xb8\xf5\x6a\x97\x98\x9d\x95\x42\x04\xfe\xef\xc5\x2e\xa5\x58\x28\x5c\xc4\x57\xee\xcc\xf3\xcc\x17\x58\xbc\x1b\x8f\xf0\x0e\xb8\xf0\x5d\x2f\x66\xd3\x2a\x3e\x7e\xf8\xf8\x2b\xfe\x26\xa9\x0d\x5d\xb4\x64\xdc\xf0\xbe\x6e\x4d\x40\x63\x2c\xc3\x04\x74\x24\x0a\xdf\x40\x5b\xc6\xc6\xff\xf2\x98\x83\x61\x4d\x29\x24\xfd\x34\x25\x1c\x93\x5e\x78\x4f\x80\x46\x98\x11\x7c\xa3\x7b\x12\x3e\x47\xef\x23\x2a\x72\x10\xae\x4d\x50\x31\x65\x54\x86\x51\x90\xab\x0b\x2f\xd8\xfa\xda\x34\xfd\x80\x34\x8a\xe8\x6a\x96\xec\x56\x96\x6d\x38\x16\xf2\x69\x71\x8f\x6b\x0e\x81\x05\x9f\xd8\xb1\x90\xc5\x5d\x2c\xad\xa9\x70\x6d\x2a\x76\x81\x41\x01\x5d\xfa\x12\x5a\xae\x51\x1e\x80\x29\xf5\x2a\x95\xb3\x3a\x94\x83\x2b\x1f\x5d\x4d\x6a\xbc\x9b\x80\x8d\xb6\x2c\xd8\xb1\x04\xe3\x1d\x7e\x3b\xca\x0e\xc8\x09\xbc\x0c\x98\x37\xa4\xa9\x0d\x81\xef\x52\xe6\x5b\x90\xeb\x61\x49\x9f\x93\x5f\x33\x97\xe7\xf6\x6b\x18\x97\x4d\xad\xef\x18\xda\x92\xa6\xd6\xf7\xc6\x5a\x94\x8c\x18\xb8\x89\x76\x32\xd0\xca\xa8\xf8\x3a\x5f\x7f\xbe\xbd\x5f\x63\xb6\x78\xc0\xd7\xd9\x72\x39\x5b\xac\x1f\x7e\xc7\xde\x68\xeb\xa3\x82\x77\x3c\xc0\xcc\xb6\xb3\x86\x6b\xec\x49\x84\x9c\xf6\xf0\xcd\xc0\xb8\xb9\x5c\x5e\x7c\x9e\x2d\xd6\xb3\xbf\xe6\xd7\xf3\xf5\x03\xbc\xe0\x6a\xbe\x5e\x5c\xae\x56\xb8\xba\x5d\x62\x86\xbb\xd9\x72\x3d\xbf\xb8\xbf\x9e\x2d\x71\x77\xbf\xbc\xbb\x5d\x5d\x4e\xb1\xe2\x54\x19\x0f\x84\x9f\x8f\xbf\xc9\xab\x14\x46\xcd\x4a\xc6\x86\x93\x81\x3c\xf8\x88\xd0\xfa\x68\x6b\xb4\xb4\x63\x08\x57\x6c\x76\x5c\x83\x50\xf9\xae\x7f\xf5\x8a\x07\x1a\x59\xef\x36\xb9\xf9\xff\xb9\x50\xcc\x1b\x38\xaf\x13\x04\x66\xfc\xd1\xaa\x76\xe7\x45\xb1\xdf\xef\xa7\x1b\x17\xa7\x5e\x36\x85\x1d\x70\xa1\xf8\x33\x17\x59\x8c\x47\xe3\x51\x51\xc0\x77\x95\x8f\x4e\xd7\x42\x15\x4b\xda\x17\x21\xd0\xb6\xb3\x0c\x1d\x3e\xe5\x3d\xfd\x13\x83\x22\x07\x86\xec\x77\x71\x5b\xb2\xa4\x1e\x8c\x0b\x2a\xb1\x4a\x07\x12\x32\x90\xbf\x71\x95\x97\x5d\xf6\x39\xf4\xf2\xcb\x0d\x4a\x6e\xd2\x90\xf2\x7d\x0b\xb9\x40\x39\x3e\xdf\xba\x71\xa4\x5c\x4f\xc7\xa3\xef\xe3\xd1\x59\x51\x0c\x92\xec\x7e\xfc\xaf\x2a\x91\x4e\x75\x3f\x54\xd3\xf1\xe8\x2c\xe7\x9d\xe3\xc3\x24\xf5\x95\x40\x41\xb9\x4b\xfd\x18\xb7\xf3\x8f\x5c\xe7\x55\xf1\x8e\xa5\xcf\x2d\xd7\x87\x03\x4c\x86\x2f\x37\x47\x52\xda\xdf\x59\x4a\x3c\x47\x13\x5d\xb6\xbc\xb1\x7e\x33\x41\x5d\xbe\xc5\x77\x68\x6b\xc2\x34\x8b\xde\xbf\xc7\xd3\x0f\x53\x43\xd1\xea\xa9\x6a\xdf\x1e\x6e\x93\x2a\x8d\x64\x0f\xf4\xd4\xb1\x6f\x40\xee\x58\x40\x73\xb8\x98\xb3\x0c\x78\x59\xf9\x6c\x11\x0e\x2f\x69\xc8\xda\xac\x1a\x98\x61\xb8\xb5\x92\xd9\xc1\x28\x4b\x9a\x2d\xfc\x8e\x25\xfd\x77\x20\xac\x51\xd2\x9a\x12\x2f\x25\x35\xc6\x91\x3d\x92\x0f\x07\x99\x46\x6f\xdc\x26\xd5\x35\x3c\x9c\x14\x56\xe9\xb7\x63\x61\x03\xeb\x64\x24\x78\x1a\x8f\x9e\xc6\xa3\x7f\x03\x00\x00\xff\xff\x90\x2d\xe6\x53\x7d\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0xb7, 0x99, 0x9b, 0x24, 0x63, 0xf0, 0x73, 0x59, 0x9, 0xfd, 0x9b, 0xed, 0x65, 0x7e, 0xfd, 0x7b, 0x69, 0xcc, 0x20, 0xc1, 0x2e, 0xa1, 0x2e, 0xe1, 0xd0, 0xa8, 0x6f, 0x18, 0xc5, 0x15, 0x28}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x5f\x6f\x22\x39\x12\x7f\x4e\xa4\x7c\x87\xd2\xbe\x00\x33\x4c\x33\xc9\x4a\xfb\x40\x2e\x27\xf5\x30\xcc\x4c\x74\x6c\x12\x01\xb9\x5c\x6e\xb5\x0f\x6e\xbb\xba\xf1\x62\xec\x96\xed\x86\x70\xab\x7c\xf7\x53\xd9\xdd\xfc\x1b\x92\xc9\xee\x1b\x6d\x97\x7f\xf5\xff\x57\x45\xef\xdd\xd9\x29\xbc\x03\x18\x98\x72\x6d\x65\x31\xf3\x70\xf1\xf1\xe2\x1c\xfe\xc5\xac\x90\x6c\x30\x63\x52\xc7\xfb\xe9\x4c\x3a\xc8\xa5\x42\x90\x0e\x4a\x66\x3d\x98\x1c\xfc\x0c\xa1\x30\x1f\xe6\x41\x18\x94\xcc\x2c\xb3\xeb\x84\x1e\x34\x8f\x8e\xdc\x13\x40\x6e\x11\xc1\x99\xdc\xaf\x98\xc5\x3e\xac\x4d\x05\x9c\x69\xb0\x28\xa4\xf3\x56\x66\x95\x47\x90\x1e\x98\x16\x3d\x63\x61\x61\x84\xcc\xd7\x11\x52\x7a\xa8\xb4\x40\x1b\x74\x7b\xb4\x0b\xd7\x18\xf2\xf5\xe6\x1e\x46\xe8\x1c\x5a\xf8\x8a\x1a\x2d\x53\x70\x57\x65\x4a\x72\x18\x49\x8e\xda\x21\x30\x07\x25\x9d\xb8\x19\x0a\xc8\x6a\x40\x7a\xfa\x85\xcc\x99\xd4\xe6\xc0\x17\x53\x69\xc1\xbc\x34\xba\x0b\x28\xfd\x0c\x2d\x2c\xd1\x3a\x69\x34\xfc\xdc\x28\xab\x21\xbb\x60\x6c\x84\x69\x33\x4f\x6e\x58\x30\x25\xbd\xec\x00\xd3\x6b\x50\xcc\x6f\x1f\xbf\x25\x2e\x5b\xf7\x05\x48\x1d\x34\xcd\x4c\x89\xe0\x67\xcc\x93\xeb\x2b\xa9\x14\x64\x08\x95\xc3\xbc\x52\xdd\x88\x96\x55\x1e\x1e\xae\xa7\xdf\x6e\xef\xa7\x90\xde\x3c\xc2\x43\x3a\x1e\xa7\x37\xd3\xc7\x4b\x58\x49\x3f\x33\x95\x07\x5c\x62\x04\x93\x8b\x52\x49\x14\xb0\x62\xd6\x32\xed\xd7\x60\xf2\x88\xf1\xeb\x70\x3c\xf8\x96\xde\x4c\xd3\x4f\xd7\xa3\xeb\xe9\x23\x18\x0b\x5f\xae\xa7\x37\xc3\xc9\x04\xbe\xdc\x8e\x21\x85\xbb\x74\x3c\xbd\x1e\xdc\x8f\xd2\x31\xdc\xdd\x8f\xef\x6e\x27\xc3\x04\x26\x48\x96\x61\x44\xf8\x71\xf8\xf3\x90\x4a\x8b\x20\xd0\x33\xa9\xdc\x4e\x40\x1e\x4d\x05\x6e\x66\x2a\x25\x60\xc6\x96\x08\x16\x39\xca\x25\x0a\x60\xc0\x4d\xb9\x7e\x73\x8a\x23\x1a\x53\x46\x17\xc1\xf9\x17\x2a\x14\xae\x73\xd0\xc6\x77\xc1\x21\xc2\x3f\x66\xde\x97\xfd\x5e\x6f\xb5\x5a\x25\x85\xae\x12\x63\x8b\x9e\x8a\x70\xae\xf7\xcf\x60\x64\xef\xec\xf4\xec\xb4\xd7\x83\xd2\xa2\xf3\xcc\xe3\xd4\x32\x8e\x16\x4c\xe5\xcb\xca\x3b\x70\x55\x9e\x4b\x2e\x51\x7b\x90\x3a\x37\x76\x11\x8a\x07\xbc\x01\x6e\x91\x79\x04\x06\xca\x70\xa6\x00\x9f\x90\x57\xe1\x8e\xe2\xde\xeb\xc5\x22\xb6\x4c\x3b\xc6\xc3\x71\x6e\xcd\x82\x7c\xae\x9c\xa7\x1f\xce\xe1\x22\x53\x28\xa0\x40\x8d\x4e\x3a\xc8\x94\xe1\xf3\xe4\xec\xf4\xcf\xb3\xd3\x93\x1d\x7b\xa8\x74\x82\xa7\xb5\x58\x28\x97\x15\xb6\x2c\x42\x56\x49\x25\xa4\x2e\x92\xb3\xd3\x93\x46\xbc\x0f\xba\x52\x54\x3d\x11\x45\x19\x33\xaf\xca\x94\x73\x53\x05\x0f\xfe\x40\xee\x23\x9e\x2b\x91\xcb\x9c\x0a\x86\x6d\x6e\xbd\x09\x57\x1b\xd5\x26\x23\x79\x82\xdf\xc3\xe9\x43\x5e\xe9\xe0\x54\x9b\x09\x61\xbb\x20\xb2\x0e\x59\x7d\xb2\x64\x96\xd0\xe0\x0a\xbc\xf9\x86\x4f\xe1\xb6\x73\x49\x37\x32\x87\xb6\x9f\x49\x97\x34\xd8\xbf\x31\xce\x7f\x87\xab\xab\xab\xd0\xf2\xb9\xd4\x28\x3a\x10\x40\x4e\x8e\xc9\xd5\x57\x27\x19\x53\x4c\x73\xec\x43\xeb\xe3\x53\x0b\xde\x83\xc8\x92\x02\xfd\xa7\x78\x1a\xf5\x25\xde\x4c\xbc\x95\xba\x68\x9f\xff\xd2\xe9\xc6\x67\xda\x84\x47\x50\xcb\xdf\x98\x8d\x74\x2d\xc0\x8d\x08\xf7\xb5\xe1\x51\x6c\x60\x44\x2d\xd5\x88\x39\x6f\x2c\x2b\xb0\x0f\x7f\x3e\x87\x83\xe7\xe0\x1c\xfd\x7e\x3e\x08\xf9\x24\x4a\xbe\x10\xf2\x1a\x07\x50\x7b\xbb\xe9\x80\x42\x52\x2b\xef\x66\x23\x02\xbe\x9a\x92\x49\x63\xd1\x41\x4a\xe6\xb8\x7e\x4b\x5e\xe8\x46\x8a\xa7\xcd\xcd\x1c\xd7\x74\xf1\x72\xca\x92\xda\xf4\xdf\xa4\x78\x7a\x73\xfe\x0e\x1e\xed\x05\x79\x42\x52\x5b\xa3\x3b\x9d\x23\x21\xb5\xe8\x2a\xe5\xa9\x13\xa4\x5e\x9a\x39\x91\xdc\x8c\x42\xa5\x54\x08\x8e\x29\x29\x7d\x2e\xd2\x4b\x86\xa8\x41\x7a\xb4\x8c\x88\xd6\x2c\xd1\xd2\xa8\x01\x8b\xbe\xb2\xda\x6d\x23\x9a\x4b\xcd\x54\x83\x5c\x67\xc0\x5b\xc6\xeb\x7e\x8a\x17\x3b\x61\xe5\xfe\x29\x04\x34\x3a\xd9\xeb\x41\xea\x81\x3c\x85\xd2\x48\xed\xbb\xb0\x42\xd0\x88\x82\x98\x41\xa0\xa8\xb8\x0f\x88\xad\x25\x53\x15\xb6\x62\xf3\x07\x3e\x0d\x6f\x4d\x45\xc3\x63\x87\x1d\xba\xc1\xc8\x85\x59\x86\xd9\x98\x31\x3e\x87\xba\x19\x8d\x95\x05\x0d\xea\x3a\xae\x7b\x8d\x48\x46\x25\x04\x1d\x2c\xab\xf3\x46\x29\xa5\xb3\x4f\x4c\xc1\x15\x64\xb2\xb8\xd6\xfe\x20\x91\x31\xfe\xcd\xe3\xce\xef\x49\xdd\x56\x89\x23\x72\x6c\x5f\x74\xba\x70\xfe\xcb\xb6\x40\xbc\x21\x2c\xf8\x31\x9a\x37\xaf\x60\x6d\x5c\xf8\xc1\xc3\xa0\x88\xda\xfb\x7d\xd0\x9b\xb8\x2a\xa3\xbc\x44\x67\x43\x38\xf7\x5b\xfc\xf2\x35\xe0\x7d\xff\x1a\xe0\x3a\x3c\x09\x13\x62\x17\x95\x3e\xc3\x77\xc1\xdc\xbd\x43\x01\xef\x81\xbe\xa4\x26\x5d\x4e\xf2\xaf\xcc\x75\xe0\x1d\xd4\x12\x77\x56\xf2\xef\x4d\xa9\x13\xfc\x19\xb9\xc5\x05\x4d\x0d\xca\x21\x67\x4a\xa1\x6d\x39\x08\x3c\xd4\xad\x0b\x32\x64\x1b\x17\xa5\x5f\x37\xb3\xc4\x33\x5b\xa0\x77\x6f\x70\x28\x00\x7d\xf8\xb0\xe1\xd6\x10\xc4\x75\x89\x70\x75\x05\xad\xc1\x78\x98\x4e\x87\xad\xa6\x1f\x7b\x3d\x78\xc0\xb0\x83\x65\x4a\x66\x42\xad\x41\xa0\x42\x8f\xd1\x34\xa3\x43\x74\x37\x0c\xd3\xa5\x55\x8a\x16\x1c\x7c\x92\xce\x4b\x5d\x40\x24\x9e\x15\x4d\xf0\x06\x2f\x74\x1a\x67\x15\x05\xe9\x70\xce\x79\x43\x5b\x8c\x45\xe2\x29\x9a\x2e\xa1\x69\x99\x92\x9b\xad\x27\x97\xd6\x79\x28\x15\xe3\x98\x04\xc0\x8d\x39\x2f\x17\xc7\x86\x14\x48\xfb\x38\xf4\x72\xc0\xda\x8e\x51\xa6\x68\x0e\x93\x05\x0e\xda\x0d\x4a\x87\x5e\xd8\x46\x7c\x07\xfe\x72\x8f\x5f\x9c\xc7\x72\x97\x5d\x68\x9b\xc1\x25\x12\x35\x07\x6a\x89\x43\x97\xf4\xfd\xfb\xd7\x7a\xd0\x23\xad\x38\x27\xf4\x70\x87\x23\x94\x29\x0e\x38\x42\xc4\xf8\xf0\xca\x5a\x2a\x86\x0d\xb9\xe7\xc4\x17\x7f\x54\xce\x53\x74\x2d\xc5\xa9\xe6\x9e\xa3\xcc\x1b\x78\x96\xe6\x7a\xe7\x08\xc3\xd2\x70\x8c\x73\x88\x34\xd6\xa3\x30\x6e\x93\xa5\xf1\xa8\xbd\x64\x4a\xad\x29\x27\x2b\x4b\xbb\xd3\x0c\x2d\x76\xc1\x49\x92\x0a\x04\x16\x44\xa5\xe6\xaa\x12\xb1\x26\x42\x3b\x34\x80\x2e\xd8\xbd\xbf\x75\x2d\xd0\x39\x56\x60\x42\x75\x95\xcb\xa7\x7a\x85\xd5\xd0\x8a\xac\xd9\xee\xb4\x92\xad\x9d\xfb\x8c\xa5\x4c\x91\x34\x35\x47\xf4\x9f\x0a\x61\xd1\xb9\x76\xa7\xa1\xb0\x6d\x9a\x1f\x66\xa8\x29\x0b\xa0\x71\x05\x9b\x5d\x88\x71\x4e\x5b\xa2\xe8\x02\x13\x82\xc8\xf2\x60\x69\xa1\xc7\x6e\x25\x3d\x9f\x41\x50\x66\xca\x6d\x8b\x76\x9a\x96\xe0\xcc\x21\xfc\x34\xfc\xcf\x74\x70\xfb\x79\x38\xb8\xbd\x7b\xfc\xa9\x0f\x7b\x67\x93\xeb\xff\x0e\x37\x67\x9f\xd2\x51\x7a\x33\x18\xfe\xd4\x8f\x4b\xc0\x11\xaf\xbc\x69\xfc\x20\x95\xce\x33\x3e\x4f\x4a\xc4\x79\xfb\xe3\x3e\x41\xec\x78\x79\x72\x92\x59\x64\xf3\xcb\x1d\x7b\x62\xdf\x36\x6a\x1a\x1e\x87\x2b\x78\x31\x68\x97\xaf\x58\x34\xa8\x1f\xb4\x9b\x01\xb1\xdd\x7c\x02\x89\xbc\xc5\x96\x8b\xbf\x61\x4c\xe8\x27\xc6\xe7\x7d\x70\x4c\xd1\x1e\x2e\xff\x47\xff\xa5\xf2\xdc\xa1\xef\x02\x6a\x61\x56\x44\x8c\x5b\xdc\x78\x55\x23\xef\xc4\xee\xbc\x13\x89\xf9\x36\x6f\x77\xb6\xd2\x04\xf7\xbd\xec\xc5\x51\x59\xd4\x02\xae\x1a\xfc\xf7\xe1\xe9\x1b\x02\x76\x51\x47\xec\x40\xc5\xcf\x07\x9b\x65\xb8\x5f\xe0\xc2\xd8\x75\x3d\xeb\x76\x7c\xfc\x51\x74\xd3\xd1\x68\x53\x5e\xf4\x41\x35\xb7\x39\xf8\x3c\x1c\x0d\xbf\xa6\xd3\xe1\x9e\xd4\x64\x9a\x4e\xaf\x07\xf1\xe8\xaf\xd7\xe1\xf9\x5f\xa8\xc3\xd6\x64\x32\xbd\x1d\x0f\x5b\xfd\xfa\x6b\x74\x9b\x7e\x6e\x7d\xaf\xb3\xde\x3c\x5f\xeb\x68\x6f\x1e\x8c\x15\x7f\xaf\x27\xf6\x37\xc0\x9c\x1d\x5b\x00\xc3\x04\xe0\xbe\x3a\xf8\xfb\x05\x4c\x37\xc4\x9d\xd7\x7f\x46\x4f\x02\xc0\x51\xaa\x7e\x3e\x3b\x7d\x3e\x3b\xfd\x7f\x00\x00\x00\xff\xff\xe2\x34\x9c\x6d\x2c\x11\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x79, 0x4a, 0x41, 0xf2, 0x2d, 0x67, 0x55, 0xda, 0x41, 0xc6, 0x4e, 0x63, 0x28, 0x9a, 0x5f, 0x75, 0xdd, 0xbd, 0x25, 0x45, 0x29, 0xdd, 0xd0, 0x2a, 0xb, 0xa1, 0x5d, 0x95, 0xc0, 0x8d, 0xee}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x95\xd1\x6f\xe2\x38\x10\xc6\xdf\x91\xf8\x1f\xbe\x7b\xa2\xdd\xb2\xd0\xee\xbd\xd1\xe3\x24\xae\xdb\xee\xa2\xeb\x42\x05\xf4\x56\x55\xd5\x07\x93\x4c\x12\xab\xc6\x8e\xec\x09\x6c\x54\xf5\x7f\x3f\x39\x0e\x10\x10\x7b\xb7\x7d\xaa\x3c\xf3\xfd\xe6\x9b\xf1\xc4\xf4\x3f\xb4\x5b\xf8\x00\xdc\x98\xbc\xb4\x32\xcd\x18\x9f\x2e\x3f\x5d\xe1\x6f\x61\x63\x29\x6e\x32\x21\x75\x88\x2f\x32\xe9\x90\x48\x45\x90\x0e\xb9\xb0\x0c\x93\x80\x33\x42\x6a\x3e\xbe\x56\xc9\x50\x72\x69\x85\x2d\x7b\x5e\xb0\x15\x9d\x88\x7b\x40\x62\x89\xe0\x4c\xc2\x1b\x61\x69\x80\xd2\x14\x88\x84\x86\xa5\x58\x3a\xb6\x72\x59\x30\x41\x32\x84\x8e\xfb\xc6\x62\x65\x62\x99\x94\x01\x29\x19\x85\x8e\xc9\x56\xb5\x99\xec\xca\x6d\x8d\x7c\x99\x3c\xe2\x9e\x9c\x23\x8b\x2f\xa4\xc9\x0a\x85\x87\x62\xa9\x64\x84\x7b\x19\x91\x76\x04\xe1\x90\xfb\x13\x97\x51\x8c\x65\x0d\xf4\xd2\x3b\x6f\x67\x5e\xdb\xc1\x9d\x29\x74\x2c\x58\x1a\xdd\x05\x49\xce\xc8\x62\x4d\xd6\x49\xa3\xf1\xfb\xb6\x58\x8d\xec\xc2\xd8\x80\x39\x13\xec\xdb\xb0\x30\xb9\x57\x9e\x43\xe8\x12\x4a\xf0\x5e\xfc\x2b\x73\xd9\xb7\x1f\x43\xea\xaa\x52\x66\x72\x02\x67\x82\x7d\xeb\x1b\xa9\x14\x96\x84\xc2\x51\x52\xa8\x6e\xa0\x2d\x0b\xc6\xf7\xf1\xe2\xeb\xf4\x71\x81\xd1\xe4\x09\xdf\x47\xb3\xd9\x68\xb2\x78\xba\xc6\x46\x72\x66\x0a\x06\xad\x29\xc0\xe4\x2a\x57\x92\x62\x6c\x84\xb5\x42\x73\x09\x93\x04\xc6\xb7\xdb\xd9\xcd\xd7\xd1\x64\x31\xfa\x6b\x7c\x3f\x5e\x3c\xc1\x58\xdc\x8d\x17\x93\xdb\xf9\x1c\x77\xd3\x19\x46\x78\x18\xcd\x16\xe3\x9b\xc7\xfb\xd1\x0c\x0f\x8f\xb3\x87\xe9\xfc\xb6\x87\x39\x79\x67\x14\x08\xff\x3f\xfe\xa4\xba\x4a\x4b\x88\x89\x85\x54\xae\x31\x90\x27\x53\xc0\x65\xa6\x50\x31\x32\xb1\x26\x58\x8a\x48\xae\x29\x86\x40\x64\xf2\xf2\x97\xaf\x38\xd0\x84\x32\x3a\xad\x9a\xff\xc9\x86\x62\x9c\x40\x1b\xee\xc2\x11\xe1\x8f\x8c\x39\x1f\xf4\xfb\x9b\xcd\xa6\x97\xea\xa2\x67\x6c\xda\x57\x01\xe7\xfa\x7f\x56\x26\xfb\xed\x56\xbb\xf5\xd6\x6e\x01\x40\xbf\x8f\x4c\x3a\xf6\xb7\xe5\xe1\x2b\x91\x57\xee\xac\x4c\xad\x58\x21\x32\x85\x66\xb2\x2e\xe4\xfa\xc4\x01\xde\xde\xbb\x3b\xa9\x12\x8e\xa7\xb9\x17\xfb\xff\x60\x72\xb2\xd5\xa6\x85\x84\x10\x75\x03\x3c\x77\x3a\xdd\x4e\xe7\xa5\xbb\x3f\xfe\x4c\x39\x67\x03\x5c\xd6\x47\x35\xce\x31\x55\x30\xa9\xd7\xe6\x95\xe2\x6a\xc4\xb4\x26\x5b\xc2\xe4\x91\x89\xeb\xc5\xf1\x3e\xff\xf9\x06\xfa\x41\x51\xc1\x54\xcd\x1d\xa8\xb4\x03\x24\x85\x8e\xbc\x81\x33\x65\xd2\x2e\xe2\xe5\x39\xde\xf6\x15\xd6\xc2\x22\xf6\x85\x31\x84\x32\x69\x2f\xa5\xe0\xe3\xec\xfc\x7a\x9f\x24\x13\x9c\x85\xa4\xdf\x86\xe0\x4c\xba\xde\xce\xef\x79\x83\xe5\xff\x76\xd1\x69\xee\x30\xdc\x76\x79\xfd\x93\xa4\xcf\x75\xe5\x0a\x7e\x94\x64\x89\x0b\xab\x1b\x87\xef\x87\xae\x4d\x5e\x5b\x36\x79\x8f\xcd\x9c\xad\xd4\xe9\x81\x6b\x9f\xf4\x4a\x25\x86\x07\xa6\x9e\x2f\x5f\x2e\x3a\x1f\x3b\x17\x07\x67\x57\xe1\xcc\xe4\x47\x4d\x57\x49\xfe\x8a\x9f\x5f\xa9\x7c\x39\xd9\xeb\x2e\x7a\x71\x71\xda\x2b\x29\x47\xf8\x4f\x25\x86\xb8\x3a\xad\x3d\x32\x7e\xdc\xca\x55\x73\xb0\x47\x11\x0c\xb1\x6b\xa7\xb1\x9d\x89\x28\x14\x37\xf7\x69\x93\xd5\x0f\x87\x88\xb8\x10\xaa\x5e\x21\xff\x12\x9a\x04\x42\x6f\xb7\x2c\xd9\x7e\xce\x40\x60\x9c\xdc\xab\x46\x21\x4b\xee\x54\x25\xa1\x54\x55\x2d\x60\x5d\x78\x0b\x96\x44\x1a\x92\xfd\x87\x42\x31\xcc\x9a\xac\xff\x5d\xa8\x37\xc0\xed\x90\x5e\x97\x48\x2d\xd4\x16\x5e\xbf\x19\x6c\x45\x24\x75\x5a\xbb\x0b\xb1\x86\xbd\x88\x7f\x1c\xac\x7c\xc0\xee\xef\xa0\x31\xa4\xf7\x76\xeb\xdf\x00\x00\x00\xff\xff\x51\x6e\x4c\xdb\x2e\x07\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0xb6, 0x32, 0xcf, 0x8a, 0x34, 0x9f, 0x69, 0x5a, 0x37, 0xb, 0x2, 0x6c, 0x11, 0xf, 0x58, 0x24, 0x65, 0xfc, 0xcf, 0xab, 0xc2, 0xf2, 0x42, 0x9e, 0x95, 0xe1, 0x59, 0x8c, 0x4b, 0x5e, 0x51}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\xc6\x13\xc5\xef\x02\xf4\x1d\xde\xd1\x4e\xf4\x17\x93\xfc\x6f\x4a\x53\x40\x35\xec\x44\xa8\x23\x1b\x92\xdc\xc0\x28\x7a\x58\x92\x43\x72\x91\xd5\x0e\x31\x3b\x2b\x45\x08\xfc\xdd\x8b\x25\x29\x4b\x01\xdc\x36\x3c\x09\xda\x79\xbf\x99\x79\xfb\xc8\xec\xd5\x78\x84\x57\xc0\x15\xb7\x07\xb1\x75\xa3\x78\xf7\xe6\xdd\x5b\xfc\x6e\xa4\xb4\xe6\xaa\x31\xd6\xf7\xe7\x9b\xc6\x06\x54\xd6\x11\x6c\x40\x6b\x44\xc1\x15\xb4\x21\xd4\xfc\xbf\xaf\x5d\x31\x9c\xcd\xc5\xc8\x61\x9a\x04\x47\xd1\x0b\xe7\x09\x50\x09\x11\x02\x57\xba\x37\x42\x33\x1c\x38\xa2\x30\x1e\x42\xa5\x0d\x2a\x36\x8f\x4a\xb0\x0a\xe3\xcb\x8c\x05\x5b\x2e\x6d\x75\xe8\x91\x56\x11\x7d\x49\xd2\xf5\x56\x92\x6d\x38\x0e\xf2\x71\xf9\x80\x5b\x0a\x81\x04\x1f\xc9\x93\x18\x87\xfb\x98\x3b\x5b\xe0\xd6\x16\xe4\x03\xc1\x04\xb4\xe9\x9f\xd0\x50\x89\x7c\x00\x26\xe9\x4d\x1a\x67\x3d\x8c\x83\x1b\x8e\xbe\x34\x6a\xd9\x4f\x40\x56\x1b\x12\xec\x48\x82\x65\x8f\xff\x1f\x9b\x0d\xc8\x09\x58\x7a\xcc\x85\xd1\xb4\x86\x80\xdb\xa4\xbc\x84\xf1\x07\x38\xa3\x27\xf1\xcf\xf8\x72\x5a\xbf\x84\xf5\x5d\xa7\x86\x5b\x82\x36\x46\xd3\xea\x7b\xeb\x1c\x72\x42\x0c\x54\x45\x37\xe9\x69\x79\x54\x7c\x59\x6c\x3e\xdd\x3d\x6c\x30\x5f\x3e\xe2\xcb\x7c\xb5\x9a\x2f\x37\x8f\xef\xb1\xb7\xda\x70\x54\xd0\x8e\x7a\x98\xdd\xb6\xce\x52\x89\xbd\x11\x31\x5e\x0f\xe0\xaa\x67\x7c\xbe\x5e\x5d\x7d\x9a\x2f\x37\xf3\xdf\x16\xb7\x8b\xcd\x23\x58\x70\xb3\xd8\x2c\xaf\xd7\x6b\xdc\xdc\xad\x30\xc7\xfd\x7c\xb5\x59\x5c\x3d\xdc\xce\x57\xb8\x7f\x58\xdd\xdf\xad\xaf\xa7\x58\x53\x9a\x8c\x7a\xc2\x7f\xdb\x5f\x75\x57\x29\x84\x92\xd4\x58\x17\xce\x0c\x79\xe4\x88\xd0\x70\x74\x25\x1a\xb3\x23\x08\x15\x64\x77\x54\xc2\xa0\xe0\xf6\xf0\xd3\x57\xdc\xd3\x8c\x63\x5f\x77\xcb\xff\x43\x42\xb1\xa8\xe0\x59\x27\x08\x44\xf8\xa5\x51\x6d\x67\x59\xb6\xdf\xef\xa7\xb5\x8f\x53\x96\x3a\x73\x3d\x2e\x64\xbf\x76\x43\x66\xe3\xd1\x78\xf4\x7d\x3c\x02\x80\x2c\x43\x63\x83\xa6\xdb\x4a\xf0\xad\x69\xd3\x74\xdc\x16\x5c\x52\x80\x32\x0a\x8e\x5e\x49\x42\x5f\x9e\x6a\x67\xf8\xfe\x34\x79\x56\x7b\x6e\x43\x5f\x14\xe0\xe3\x36\x27\xe9\x01\x83\x20\x1d\xcf\xf0\xe6\x54\x1f\x94\xda\xd4\xcd\xfa\x1d\x7f\xa5\xb2\xb3\x91\x76\x24\x87\xa1\x69\x1f\x8e\x34\xcb\x1f\x9f\x41\xdf\xa8\x88\x4a\x9d\xb7\x40\xa7\x9d\xa1\x8a\xbe\x48\xa1\xbc\x70\x5c\x4f\x50\xe6\x97\x18\x76\x49\xcf\xce\xa4\xcc\xe2\x03\x1c\xd7\x53\x6e\xa7\xca\x6b\x15\xeb\xeb\x8b\xcb\xf7\xa7\x22\x5b\xe1\x42\x1b\x1b\xa6\x69\x9d\x3f\xb9\xfd\xeb\xf2\x8c\x90\x9e\x1f\x0e\x5f\xbf\x3e\x93\x3e\x9d\x7e\x92\x0b\x84\x7f\x13\xe2\x03\xde\xbe\x2c\xed\xca\x92\x35\xcf\xec\x33\x47\x2b\x13\x9d\x9e\x5b\xb4\x6f\x86\xbc\x9b\x42\xa3\x71\x83\x2b\xe9\x05\xe6\x0a\xc6\x1f\x8d\xab\x8e\x29\x04\x7a\xc6\x8b\x56\xa5\x46\xcf\xad\x84\xc2\x4b\xbd\x8c\x73\x5d\xbf\x63\x0c\xba\x10\xe7\x44\x1e\x56\x49\x4c\x7a\x9d\x79\x47\x92\x3e\x68\x10\xd2\x28\x3e\x3c\x23\x93\xae\xb2\xde\xb8\x23\x7c\x08\xbb\x8a\x29\xac\xaf\x87\xf9\xfa\xb3\xb3\x01\x0b\xfd\xf6\xc3\x3d\xf6\xd8\x93\x9f\x67\x36\x3d\x8d\x47\x7f\x07\x00\x00\xff\xff\x47\xfe\xd6\x69\xe7\x05\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x43, 0x2b, 0xa2, 0xd0, 0x68, 0x40, 0x81, 0xd5, 0xc2, 0xaa, 0x2a, 0xbc, 0xd5, 0x56, 0x4f, 0x73, 0x43, 0xbd, 0x43, 0x26, 0x8b, 0xa4, 0xdb, 0xf8, 0x80, 0xf, 0x13, 0x42, 0x66, 0x31, 0xc2, 0x34}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":        _4byte_tracerJs,
	"4byte_tracer_legacy.js": _4byte_tracer_legacyJs,
	"bigram_tracer.js":       bigram_tracerJs,
	"call_tracer.js":         call_tracerJs,
	"call_tracer_legacy.js":  call_tracer_legacyJs,
	"evmdis_tracer.js":       evmdis_tracerJs,
	"noop_tracer.js":         noop_tracerJs,
	"opcount_tracer.js":      opcount_tracerJs,
	"prestate_tracer.js":     prestate_tracerJs,
	"trigram_tracer.js":      trigram_tracerJs,
	"unigram_tracer.js":      unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":        {_4byte_tracerJs, map[string]*bintree{}},
	"4byte_tracer_legacy.js": {_4byte_tracer_legacyJs, map[string]*bintree{}},
	"bigram_tracer.js":       {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer.js":         {call_tracerJs, map[string]*bintree{}},
	"call_tracer_legacy.js":  {call_tracer_legacyJs, map[string]*bintree{}},
	"evmdis_tracer.js":       {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":         {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":      {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js":     {prestate_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":      {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":      {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
