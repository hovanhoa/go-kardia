Node:
  Name: node1
  DataDir: /tmp/.kardia
  HTTPHost: 0.0.0.0
  HTTPPort: 8545
  HTTPModules:
    - node
    - kai
    - tx
    - account
    - dual
    - neo
  HTTPVirtualHosts:
    - 0.0.0.0
    - localhost
  HTTPCors:
    - "*"
  P2P:
    PrivateKey: 8843ebcb1021b00ae9a644db6617f9c6d870e5fd53624cefe374c1d2d710fd06
    ListenAddress: tcp://0.0.0.0:3000
    MaxPeers: 25
  LogLevel: info           # crit, error, warn, info, debug, trace
  Metrics: 1
MainChain:
  ServiceName: KARDIA
  ChainId: 1
  NetworkId: 100
  AcceptTxs: 1       # accept tx sync process or not (1 is yes, 0 is no)
  Seeds:
    - c1fe56e3f58d3244f606306611a5d10c8333f1f6@127.0.0.1:3000
    - 7cefc13b6e2aedeedfb7cb6c32457240746baee5@127.0.0.1:3001
    - ff3dac4f04ddbd24de5d6039f90596f0a8bb08fd@127.0.0.1:3002
  ZeroFee: 0          # 0 is no, 1 is yes
  Database:
    Dir: chaindata                           # directory stores leveldb
    Cache: 16                                # cache is used in leveldb
    Handles: 32                              # handles is used in leveldb
    Drop: 1                                  # Specify whether drop database or not (0 is no, 1 is yes)
  Events:
    - ContractAddress: 0x00000000000000000000000000000000736d6339 # KAI smc address
      # NOTE: currently, kardia tool auto convert address to lower case, therefore contractAddress must be set as lowercase
      ABI: "[{'constant':false,'inputs':[{'name':'fromType','type':'string'},{'name':'toType','type':'string'},{'name':'fromAddress','type':'string'},{'name':'receiver','type':'string'},{'name':'txid','type':'string'},{'name':'amount','type':'uint256'},{'name':'timestamp','type':'uint256'}],'name':'addOrder','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':false,'inputs':[],'name':'setOwner','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':false,'inputs':[{'name':'fromType','type':'string'},{'name':'toType','type':'string'},{'name':'fromAmount','type':'uint256'},{'name':'receivedAmount','type':'uint256'}],'name':'updateRate','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'txid','type':'string'}],'name':'getMatchingResult','outputs':[{'name':'results','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'user','type':'address'}],'name':'deAuthorizedUser','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'_type','type':'string'}],'name':'getAddressFromType','outputs':[{'name':'','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'_address','type':'string'},{'name':'fromType','type':'string'},{'name':'toType','type':'string'}],'name':'getAllOrders','outputs':[{'name':'orders','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[],'name':'getOwner','outputs':[{'name':'','type':'address'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'fromType','type':'string'},{'name':'toType','type':'string'}],'name':'getPendingOrders','outputs':[{'name':'orders','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'user','type':'address'}],'name':'authorizedUser','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'txId','type':'string'}],'name':'getOrderByTxIdPublic','outputs':[{'name':'strOrder','type':'string'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'fromType','type':'string'},{'name':'toType','type':'string'}],'name':'getRate','outputs':[{'name':'fromAmount','type':'uint256'},{'name':'receivedAmount','type':'uint256'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':true,'inputs':[{'name':'txId','type':'string'}],'name':'hasTxId','outputs':[{'name':'','type':'bool'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'txId','type':'string'},{'name':'kardiaTxId','type':'string'}],'name':'updateKardiaTx','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':false,'inputs':[{'name':'txId','type':'string'},{'name':'targetTxId','type':'string'}],'name':'updateTargetTx','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':false,'inputs':[{'name':'_type','type':'string'},{'name':'_address','type':'string'}],'name':'updateAvailableType','outputs':[],'payable':false,'stateMutability':'nonpayable','type':'function'},{'constant':true,'inputs':[{'name':'user','type':'address'}],'name':'isAuthorized','outputs':[{'name':'','type':'bool'}],'payable':false,'stateMutability':'view','type':'function'}]"
Debug: # Devnet config for debugging purposes 
  Port: ":6000"